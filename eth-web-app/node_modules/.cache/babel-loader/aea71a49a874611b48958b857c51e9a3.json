{"ast":null,"code":"import{selectorFamily,useRecoilValue}from\"recoil\";import{listedQuery,whitelistQuery}from\"./assets\";export var itemQuery=selectorFamily({key:\"item\",get:function get(token){return function(_ref){var _whitelist$token;var get=_ref.get;var whitelist=get(whitelistQuery);return(_whitelist$token=whitelist[token])!==null&&_whitelist$token!==void 0?_whitelist$token:{};};}});export var assetQuery=selectorFamily({key:\"asset\",get:function get(token){return function(_ref2){var get=_ref2.get;var item=get(itemQuery(token));return item;};}});export var symbolQuery=selectorFamily({key:\"symbol\",get:function get(token){return function(_ref3){var _item$symbol;var get=_ref3.get;var item=get(itemQuery(token));return(_item$symbol=item===null||item===void 0?void 0:item.symbol)!==null&&_item$symbol!==void 0?_item$symbol:\"\";};}});export var itemBySymbolQuery=selectorFamily({key:\"itemBySymbol\",get:function get(symbol){return function(_ref4){var get=_ref4.get;var listed=get(listedQuery(\"listed\"));return listed.find(function(item){return item.symbol===symbol;});};}});export var useItem=function useItem(token){var value=useRecoilValue(itemQuery(token));return value;};export var useAsset=function useAsset(token){var value=useRecoilValue(assetQuery(token));return value;};export var useSymbol=function useSymbol(token){var value=useRecoilValue(symbolQuery(token));return value;};","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/database/asset.ts"],"names":["selectorFamily","useRecoilValue","listedQuery","whitelistQuery","itemQuery","key","get","token","whitelist","assetQuery","item","symbolQuery","symbol","itemBySymbolQuery","listed","find","useItem","value","useAsset","useSymbol"],"mappings":"AAAA,OAASA,cAAT,CAAyBC,cAAzB,KAA+C,QAA/C,CACA,OAASC,WAAT,CAAsBC,cAAtB,KAA4C,UAA5C,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAGJ,cAAc,CAAC,CACtCK,GAAG,CAAE,MADiC,CAEtCC,GAAG,CAAE,aAACC,KAAD,QAAmB,eAAa,yBAAVD,CAAAA,GAAU,MAAVA,GAAU,CACnC,GAAME,CAAAA,SAAS,CAAGF,GAAG,CAACH,cAAD,CAArB,CACA,wBAAOK,SAAS,CAACD,KAAD,CAAhB,qDAA2B,EAA3B,CACD,CAHI,EAFiC,CAAD,CAAhC,CAQP,MAAO,IAAME,CAAAA,UAAU,CAAGT,cAAc,CAAC,CACvCK,GAAG,CAAE,OADkC,CAEvCC,GAAG,CAAE,aAACC,KAAD,QAAmB,gBAAa,IAAVD,CAAAA,GAAU,OAAVA,GAAU,CACnC,GAAMI,CAAAA,IAAI,CAAGJ,GAAG,CAACF,SAAS,CAACG,KAAD,CAAV,CAAhB,CACA,MAAOG,CAAAA,IAAP,CACD,CAHI,EAFkC,CAAD,CAAjC,CAQP,MAAO,IAAMC,CAAAA,WAAW,CAAGX,cAAc,CAAC,CACxCK,GAAG,CAAE,QADmC,CAExCC,GAAG,CAAE,aAACC,KAAD,QAAmB,gBAAa,qBAAVD,CAAAA,GAAU,OAAVA,GAAU,CACnC,GAAMI,CAAAA,IAAI,CAAGJ,GAAG,CAACF,SAAS,CAACG,KAAD,CAAV,CAAhB,CACA,oBAAOG,IAAP,SAAOA,IAAP,iBAAOA,IAAI,CAAEE,MAAb,6CAAuB,EAAvB,CACD,CAHI,EAFmC,CAAD,CAAlC,CAQP,MAAO,IAAMC,CAAAA,iBAAiB,CAAGb,cAAc,CAAC,CAC9CK,GAAG,CAAE,cADyC,CAE9CC,GAAG,CAAE,aAACM,MAAD,QAAoB,gBAAa,IAAVN,CAAAA,GAAU,OAAVA,GAAU,CACpC,GAAMQ,CAAAA,MAAM,CAAGR,GAAG,CAACJ,WAAW,CAAC,QAAD,CAAZ,CAAlB,CACA,MAAOY,CAAAA,MAAM,CAACC,IAAP,CAAY,SAACL,IAAD,QAAUA,CAAAA,IAAI,CAACE,MAAL,GAAgBA,MAA1B,EAAZ,CAAP,CACD,CAHI,EAFyC,CAAD,CAAxC,CAQP,MAAO,IAAMI,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACT,KAAD,CAAmB,CACxC,GAAMU,CAAAA,KAAK,CAAGhB,cAAc,CAACG,SAAS,CAACG,KAAD,CAAV,CAA5B,CACA,MAAOU,CAAAA,KAAP,CACD,CAHM,CAKP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACX,KAAD,CAAmB,CACzC,GAAMU,CAAAA,KAAK,CAAGhB,cAAc,CAACQ,UAAU,CAACF,KAAD,CAAX,CAA5B,CACA,MAAOU,CAAAA,KAAP,CACD,CAHM,CAKP,MAAO,IAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACZ,KAAD,CAAmB,CAC1C,GAAMU,CAAAA,KAAK,CAAGhB,cAAc,CAACU,WAAW,CAACJ,KAAD,CAAZ,CAA5B,CACA,MAAOU,CAAAA,KAAP,CACD,CAHM","sourcesContent":["import { selectorFamily, useRecoilValue } from \"recoil\"\nimport { listedQuery, whitelistQuery } from \"./assets\"\n\nexport const itemQuery = selectorFamily({\n  key: \"item\",\n  get: (token: string) => ({ get }) => {\n    const whitelist = get(whitelistQuery)\n    return whitelist[token] ?? {}\n  },\n})\n\nexport const assetQuery = selectorFamily({\n  key: \"asset\",\n  get: (token: string) => ({ get }) => {\n    const item = get(itemQuery(token))\n    return item as ListedAsset\n  },\n})\n\nexport const symbolQuery = selectorFamily({\n  key: \"symbol\",\n  get: (token: string) => ({ get }) => {\n    const item = get(itemQuery(token))\n    return item?.symbol ?? \"\"\n  },\n})\n\nexport const itemBySymbolQuery = selectorFamily({\n  key: \"itemBySymbol\",\n  get: (symbol: string) => ({ get }) => {\n    const listed = get(listedQuery(\"listed\"))\n    return listed.find((item) => item.symbol === symbol)\n  },\n})\n\nexport const useItem = (token: string) => {\n  const value = useRecoilValue(itemQuery(token))\n  return value\n}\n\nexport const useAsset = (token: string) => {\n  const value = useRecoilValue(assetQuery(token))\n  return value\n}\n\nexport const useSymbol = (token: string) => {\n  const value = useRecoilValue(symbolQuery(token))\n  return value\n}\n"]},"metadata":{},"sourceType":"module"}