{"ast":null,"code":"import _objectWithoutProperties from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _objectSpread from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import Tippy from\"@tippyjs/react\";import classNames from\"classnames\";import{isNil}from\"ramda\";import Icon from\"./Icon\";import\"tippy.js/dist/tippy.css\";import\"tippy.js/themes/light-border.css\";import styles from\"./Tooltip.module.scss\";export var DefaultTippyProps={animation:false,interactive:true,appendTo:document.body};var TooltipTippyProps=_objectSpread(_objectSpread({},DefaultTippyProps),{},{placement:\"top\",theme:\"light-border\",className:styles.tooltip});var Tooltip=function Tooltip(_ref){var className=_ref.className,onClick=_ref.onClick,children=_ref.children,props=_objectWithoutProperties(_ref,[\"className\",\"onClick\",\"children\"]);var button=/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:classNames(styles.button,className),onClick:onClick,children:children});return props.content?/*#__PURE__*/_jsx(Tippy,_objectSpread(_objectSpread(_objectSpread({},TooltipTippyProps),props),{},{hideOnClick:isNil(props.visible)?false:undefined,children:button})):button;};export var TooltipIcon=function TooltipIcon(_ref2){var children=_ref2.children,props=_objectWithoutProperties(_ref2,[\"children\"]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.flex,children:[children,/*#__PURE__*/_jsx(\"div\",{className:styles.icon,children:/*#__PURE__*/_jsx(Tooltip,_objectSpread(_objectSpread({},props),{},{children:/*#__PURE__*/_jsx(Icon,{name:\"info_outline\",size:16})}))})]});};export default Tooltip;","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/components/Tooltip.tsx"],"names":["Tippy","classNames","isNil","Icon","styles","DefaultTippyProps","animation","interactive","appendTo","document","body","TooltipTippyProps","placement","theme","className","tooltip","Tooltip","onClick","children","props","button","content","visible","undefined","TooltipIcon","flex","icon"],"mappings":"maACA,MAAOA,CAAAA,KAAP,KAAkC,gBAAlC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,KAAT,KAAsB,OAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,MAAO,yBAAP,CACA,MAAO,kCAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CAEA,MAAO,IAAMC,CAAAA,iBAA6B,CAAG,CAC3CC,SAAS,CAAE,KADgC,CAE3CC,WAAW,CAAE,IAF8B,CAG3CC,QAAQ,CAAEC,QAAQ,CAACC,IAHwB,CAAtC,CAMP,GAAMC,CAAAA,iBAA6B,gCAC9BN,iBAD8B,MAEjCO,SAAS,CAAE,KAFsB,CAGjCC,KAAK,CAAE,cAH0B,CAIjCC,SAAS,CAAEV,MAAM,CAACW,OAJe,EAAnC,CAWA,GAAMC,CAAAA,OAAkB,CAAG,QAArBA,CAAAA,OAAqB,MAAgD,IAA7CF,CAAAA,SAA6C,MAA7CA,SAA6C,CAAlCG,OAAkC,MAAlCA,OAAkC,CAAzBC,QAAyB,MAAzBA,QAAyB,CAAZC,KAAY,mEACzE,GAAMC,CAAAA,MAAM,cACV,eACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAEnB,UAAU,CAACG,MAAM,CAACgB,MAAR,CAAgBN,SAAhB,CAFvB,CAGE,OAAO,CAAEG,OAHX,UAKGC,QALH,EADF,CAUA,MAAOC,CAAAA,KAAK,CAACE,OAAN,cACL,KAAC,KAAD,8CACMV,iBADN,EAEMQ,KAFN,MAGE,WAAW,CAAEjB,KAAK,CAACiB,KAAK,CAACG,OAAP,CAAL,CAAuB,KAAvB,CAA+BC,SAH9C,UAKGH,MALH,GADK,CASLA,MATF,CAWD,CAtBD,CAwBA,MAAO,IAAMI,CAAAA,WAAsB,CAAG,QAAzBA,CAAAA,WAAyB,WAAGN,CAAAA,QAAH,OAAGA,QAAH,CAAgBC,KAAhB,iEACpC,aAAK,SAAS,CAAEf,MAAM,CAACqB,IAAvB,WACGP,QADH,cAEE,YAAK,SAAS,CAAEd,MAAM,CAACsB,IAAvB,uBACE,KAAC,OAAD,gCAAaP,KAAb,4BACE,KAAC,IAAD,EAAM,IAAI,CAAC,cAAX,CAA0B,IAAI,CAAE,EAAhC,EADF,GADF,EAFF,GADoC,EAA/B,CAWP,cAAeH,CAAAA,OAAf","sourcesContent":["import { FC } from \"react\"\nimport Tippy, { TippyProps } from \"@tippyjs/react\"\nimport classNames from \"classnames\"\nimport { isNil } from \"ramda\"\nimport Icon from \"./Icon\"\n\nimport \"tippy.js/dist/tippy.css\"\nimport \"tippy.js/themes/light-border.css\"\nimport styles from \"./Tooltip.module.scss\"\n\nexport const DefaultTippyProps: TippyProps = {\n  animation: false,\n  interactive: true,\n  appendTo: document.body,\n}\n\nconst TooltipTippyProps: TippyProps = {\n  ...DefaultTippyProps,\n  placement: \"top\",\n  theme: \"light-border\",\n  className: styles.tooltip,\n}\n\ninterface Props extends Omit<TippyProps, \"children\"> {\n  onClick?: () => void\n}\n\nconst Tooltip: FC<Props> = ({ className, onClick, children, ...props }) => {\n  const button = (\n    <button\n      type=\"button\"\n      className={classNames(styles.button, className)}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  )\n\n  return props.content ? (\n    <Tippy\n      {...TooltipTippyProps}\n      {...props}\n      hideOnClick={isNil(props.visible) ? false : undefined}\n    >\n      {button}\n    </Tippy>\n  ) : (\n    button\n  )\n}\n\nexport const TooltipIcon: FC<Props> = ({ children, ...props }) => (\n  <div className={styles.flex}>\n    {children}\n    <div className={styles.icon}>\n      <Tooltip {...props}>\n        <Icon name=\"info_outline\" size={16} />\n      </Tooltip>\n    </div>\n  </div>\n)\n\nexport default Tooltip\n"]},"metadata":{},"sourceType":"module"}