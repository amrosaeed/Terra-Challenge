{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgSwap = void 0;\n\nvar json_1 = require(\"../../../util/json\");\n\nvar Coin_1 = require(\"../../Coin\");\n/**\n * Executes a market swap between 2 denominations at the exchange rate registered by the\n * Oracle module. The account will lose the amount of coins offered, and receive funds\n * in the requested denomination after a swap fee has been applied.\n */\n\n\nvar MsgSwap =\n/** @class */\nfunction (_super) {\n  __extends(MsgSwap, _super);\n  /**\n   * @param trader trader's account address\n   * @param offer_coin coin to be swapped (from)\n   * @param ask_denom desired denomination (to)\n   */\n\n\n  function MsgSwap(trader, offer_coin, ask_denom) {\n    var _this = _super.call(this) || this;\n\n    _this.trader = trader;\n    _this.offer_coin = offer_coin;\n    _this.ask_denom = ask_denom;\n    return _this;\n  }\n\n  MsgSwap.fromData = function (data) {\n    var _a = data.value,\n        trader = _a.trader,\n        offer_coin = _a.offer_coin,\n        ask_denom = _a.ask_denom;\n    return new MsgSwap(trader, Coin_1.Coin.fromData(offer_coin), ask_denom);\n  };\n\n  MsgSwap.prototype.toData = function () {\n    var _a = this,\n        trader = _a.trader,\n        offer_coin = _a.offer_coin,\n        ask_denom = _a.ask_denom;\n\n    return {\n      type: 'market/MsgSwap',\n      value: {\n        trader: trader,\n        offer_coin: offer_coin.toData(),\n        ask_denom: ask_denom\n      }\n    };\n  };\n\n  return MsgSwap;\n}(json_1.JSONSerializable);\n\nexports.MsgSwap = MsgSwap;","map":{"version":3,"sources":["../../../../src/core/market/msgs/MsgSwap.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,YAAA,CAAA;AAIA;;;;AAIG;;;AACH,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;AAC3B;;;;AAIG;;;AACH,WAAA,OAAA,CACS,MADT,EAES,UAFT,EAGS,SAHT,EAGyB;AAHzB,QAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IALT;;AACS,IAAA,KAAA,CAAA,MAAA,GAAA,MAAA;AACA,IAAA,KAAA,CAAA,UAAA,GAAA,UAAA;AACA,IAAA,KAAA,CAAA,SAAA,GAAA,SAAA;;AAGR;;AAEa,EAAA,OAAA,CAAA,QAAA,GAAd,UAAuB,IAAvB,EAAyC;AAErC,QAAA,EAAA,GACE,IAAI,CADkC,KAAxC;AAAA,QAAS,MAAM,GAAA,EAAA,CAAA,MAAf;AAAA,QAAiB,UAAU,GAAA,EAAA,CAAA,UAA3B;AAAA,QAA6B,SAAS,GAAA,EAAA,CAAA,SAAtC;AAEF,WAAO,IAAI,OAAJ,CAAY,MAAZ,EAAoB,MAAA,CAAA,IAAA,CAAK,QAAL,CAAc,UAAd,CAApB,EAA+C,SAA/C,CAAP;AACD,GALa;;AAOP,EAAA,OAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAoC,IAApC;AAAA,QAAE,MAAM,GAAA,EAAA,CAAA,MAAR;AAAA,QAAU,UAAU,GAAA,EAAA,CAAA,UAApB;AAAA,QAAsB,SAAS,GAAA,EAAA,CAAA,SAA/B;;AACN,WAAO;AACL,MAAA,IAAI,EAAE,gBADD;AAEL,MAAA,KAAK,EAAE;AACL,QAAA,MAAM,EAAA,MADD;AAEL,QAAA,UAAU,EAAE,UAAU,CAAC,MAAX,EAFP;AAGL,QAAA,SAAS,EAAA;AAHJ;AAFF,KAAP;AAQD,GAVM;;AAWT,SAAA,OAAA;AAAC,CAhCD,CAA6B,MAAA,CAAA,gBAA7B,CAAA;;AAAa,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgSwap = void 0;\nvar json_1 = require(\"../../../util/json\");\nvar Coin_1 = require(\"../../Coin\");\n/**\n * Executes a market swap between 2 denominations at the exchange rate registered by the\n * Oracle module. The account will lose the amount of coins offered, and receive funds\n * in the requested denomination after a swap fee has been applied.\n */\nvar MsgSwap = /** @class */ (function (_super) {\n    __extends(MsgSwap, _super);\n    /**\n     * @param trader trader's account address\n     * @param offer_coin coin to be swapped (from)\n     * @param ask_denom desired denomination (to)\n     */\n    function MsgSwap(trader, offer_coin, ask_denom) {\n        var _this = _super.call(this) || this;\n        _this.trader = trader;\n        _this.offer_coin = offer_coin;\n        _this.ask_denom = ask_denom;\n        return _this;\n    }\n    MsgSwap.fromData = function (data) {\n        var _a = data.value, trader = _a.trader, offer_coin = _a.offer_coin, ask_denom = _a.ask_denom;\n        return new MsgSwap(trader, Coin_1.Coin.fromData(offer_coin), ask_denom);\n    };\n    MsgSwap.prototype.toData = function () {\n        var _a = this, trader = _a.trader, offer_coin = _a.offer_coin, ask_denom = _a.ask_denom;\n        return {\n            type: 'market/MsgSwap',\n            value: {\n                trader: trader,\n                offer_coin: offer_coin.toData(),\n                ask_denom: ask_denom,\n            },\n        };\n    };\n    return MsgSwap;\n}(json_1.JSONSerializable));\nexports.MsgSwap = MsgSwap;\n//# sourceMappingURL=MsgSwap.js.map"]},"metadata":{},"sourceType":"script"}