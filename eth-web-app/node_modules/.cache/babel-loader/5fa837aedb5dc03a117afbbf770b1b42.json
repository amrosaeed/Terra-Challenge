{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgExchangeRateVote = exports.voteHash = void 0;\n\nvar json_1 = require(\"../../../util/json\");\n\nvar numeric_1 = require(\"../../numeric\");\n\nvar MsgExchangeRatePrevote_1 = require(\"./MsgExchangeRatePrevote\");\n\nvar sha256_1 = __importDefault(require(\"crypto-js/sha256\"));\n/**\n * Calculates the vote hash\n * @param exchangeRate exchange rate\n * @param denom denomination\n * @param salt salt\n * @param validator validator operator address\n */\n\n\nfunction voteHash(exchangeRate, denom, salt, validator) {\n  var payload = salt + \":\" + exchangeRate + \":\" + denom + \":\" + validator;\n  return sha256_1.default(payload).toString().substring(0, 40);\n}\n\nexports.voteHash = voteHash;\n/**\n * Every validator in the validating set (top 100 in total bonded Luna) is required to\n * submit a vote for the current exchange rate of LUNA for every active denomination\n * once per vote period.\n *\n * Votes are registered through submitting a [[MsgExchangeRateVote]] message, which must\n * correspond to a [[MsgExchangeRatePrevote]] submitted in the previous vote period.\n */\n\nvar MsgExchangeRateVote =\n/** @class */\nfunction (_super) {\n  __extends(MsgExchangeRateVote, _super);\n  /**\n   * @param exchange_rate exchange rate\n   * @param denom denomination\n   * @param salt salt\n   * @param feeder feeder address\n   * @param validator validator operator address\n   */\n\n\n  function MsgExchangeRateVote(exchange_rate, denom, salt, feeder, validator) {\n    var _this = _super.call(this) || this;\n\n    _this.denom = denom;\n    _this.salt = salt;\n    _this.feeder = feeder;\n    _this.validator = validator;\n    _this.exchange_rate = new numeric_1.Dec(exchange_rate);\n    return _this;\n  }\n\n  MsgExchangeRateVote.fromData = function (data) {\n    var _a = data.value,\n        exchange_rate = _a.exchange_rate,\n        salt = _a.salt,\n        denom = _a.denom,\n        feeder = _a.feeder,\n        validator = _a.validator;\n    return new MsgExchangeRateVote(exchange_rate, denom, salt, feeder, validator);\n  };\n\n  MsgExchangeRateVote.prototype.toData = function () {\n    var _a = this,\n        exchange_rate = _a.exchange_rate,\n        salt = _a.salt,\n        denom = _a.denom,\n        feeder = _a.feeder,\n        validator = _a.validator;\n\n    return {\n      type: 'oracle/MsgExchangeRateVote',\n      value: {\n        exchange_rate: exchange_rate.toString(),\n        denom: denom,\n        salt: salt,\n        feeder: feeder,\n        validator: validator\n      }\n    };\n  };\n  /**\n   * Gets the vote hash for the MsgExchangeRateVote, for the creation of the corresponding\n   * prevote message.\n   */\n\n\n  MsgExchangeRateVote.prototype.getVoteHash = function () {\n    return voteHash(this.exchange_rate.toString(), this.denom, this.salt, this.validator);\n  };\n  /**\n   * You can generate the corresponding prevote message through the prevote property.\n   * This will return a [[MsgExchangeRatePrevote]] with the proper vote hash and values,\n   * determined by the current attributes of the object.\n   *\n   * @returns the corresponding prevote message to send\n   */\n\n\n  MsgExchangeRateVote.prototype.getPrevote = function () {\n    return new MsgExchangeRatePrevote_1.MsgExchangeRatePrevote(this.getVoteHash(), this.denom, this.feeder, this.validator);\n  };\n\n  return MsgExchangeRateVote;\n}(json_1.JSONSerializable);\n\nexports.MsgExchangeRateVote = MsgExchangeRateVote;","map":{"version":3,"sources":["../../../../src/core/oracle/msgs/MsgExchangeRateVote.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgExchangeRateVote = exports.voteHash = void 0;\nvar json_1 = require(\"../../../util/json\");\nvar numeric_1 = require(\"../../numeric\");\nvar MsgExchangeRatePrevote_1 = require(\"./MsgExchangeRatePrevote\");\nvar sha256_1 = __importDefault(require(\"crypto-js/sha256\"));\n/**\n * Calculates the vote hash\n * @param exchangeRate exchange rate\n * @param denom denomination\n * @param salt salt\n * @param validator validator operator address\n */\nfunction voteHash(exchangeRate, denom, salt, validator) {\n    var payload = salt + \":\" + exchangeRate + \":\" + denom + \":\" + validator;\n    return sha256_1.default(payload).toString().substring(0, 40);\n}\nexports.voteHash = voteHash;\n/**\n * Every validator in the validating set (top 100 in total bonded Luna) is required to\n * submit a vote for the current exchange rate of LUNA for every active denomination\n * once per vote period.\n *\n * Votes are registered through submitting a [[MsgExchangeRateVote]] message, which must\n * correspond to a [[MsgExchangeRatePrevote]] submitted in the previous vote period.\n */\nvar MsgExchangeRateVote = /** @class */ (function (_super) {\n    __extends(MsgExchangeRateVote, _super);\n    /**\n     * @param exchange_rate exchange rate\n     * @param denom denomination\n     * @param salt salt\n     * @param feeder feeder address\n     * @param validator validator operator address\n     */\n    function MsgExchangeRateVote(exchange_rate, denom, salt, feeder, validator) {\n        var _this = _super.call(this) || this;\n        _this.denom = denom;\n        _this.salt = salt;\n        _this.feeder = feeder;\n        _this.validator = validator;\n        _this.exchange_rate = new numeric_1.Dec(exchange_rate);\n        return _this;\n    }\n    MsgExchangeRateVote.fromData = function (data) {\n        var _a = data.value, exchange_rate = _a.exchange_rate, salt = _a.salt, denom = _a.denom, feeder = _a.feeder, validator = _a.validator;\n        return new MsgExchangeRateVote(exchange_rate, denom, salt, feeder, validator);\n    };\n    MsgExchangeRateVote.prototype.toData = function () {\n        var _a = this, exchange_rate = _a.exchange_rate, salt = _a.salt, denom = _a.denom, feeder = _a.feeder, validator = _a.validator;\n        return {\n            type: 'oracle/MsgExchangeRateVote',\n            value: {\n                exchange_rate: exchange_rate.toString(),\n                denom: denom,\n                salt: salt,\n                feeder: feeder,\n                validator: validator,\n            },\n        };\n    };\n    /**\n     * Gets the vote hash for the MsgExchangeRateVote, for the creation of the corresponding\n     * prevote message.\n     */\n    MsgExchangeRateVote.prototype.getVoteHash = function () {\n        return voteHash(this.exchange_rate.toString(), this.denom, this.salt, this.validator);\n    };\n    /**\n     * You can generate the corresponding prevote message through the prevote property.\n     * This will return a [[MsgExchangeRatePrevote]] with the proper vote hash and values,\n     * determined by the current attributes of the object.\n     *\n     * @returns the corresponding prevote message to send\n     */\n    MsgExchangeRateVote.prototype.getPrevote = function () {\n        return new MsgExchangeRatePrevote_1.MsgExchangeRatePrevote(this.getVoteHash(), this.denom, this.feeder, this.validator);\n    };\n    return MsgExchangeRateVote;\n}(json_1.JSONSerializable));\nexports.MsgExchangeRateVote = MsgExchangeRateVote;\n//# sourceMappingURL=MsgExchangeRateVote.js.map"]},"metadata":{},"sourceType":"script"}