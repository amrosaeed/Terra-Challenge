{"ast":null,"code":"var DuplexStream = require('readable-stream').Duplex;\n\nvar inherits = require('util').inherits;\n\nmodule.exports = PostMessageStream;\ninherits(PostMessageStream, DuplexStream);\n\nfunction PostMessageStream(opts) {\n  DuplexStream.call(this, {\n    objectMode: true\n  });\n  this._name = opts.name;\n  this._target = opts.target;\n  this._targetWindow = opts.targetWindow || window;\n  this._origin = opts.targetWindow ? '*' : location.origin; // initialization flags\n\n  this._init = false;\n  this._haveSyn = false;\n  window.addEventListener('message', this._onMessage.bind(this), false); // send syncorization message\n\n  this._write('SYN', null, noop);\n\n  this.cork();\n} // private\n\n\nPostMessageStream.prototype._onMessage = function (event) {\n  var msg = event.data; // validate message\n\n  if (this._origin !== '*' && event.origin !== this._origin) return;\n  if (event.source !== this._targetWindow) return;\n  if (typeof msg !== 'object') return;\n  if (msg.target !== this._name) return;\n  if (!msg.data) return;\n\n  if (!this._init) {\n    if (msg.data === 'SYN') {\n      this._haveSyn = true;\n\n      this._write('ACK', null, noop);\n    } else if (msg.data === 'ACK') {\n      this._init = true;\n\n      if (!this._haveSyn) {\n        this._write('ACK', null, noop);\n      }\n\n      this.uncork();\n    }\n  } else {\n    // forward message\n    try {\n      this.push(msg.data);\n    } catch (err) {\n      this.emit('error', err);\n    }\n  }\n}; // stream plumbing\n\n\nPostMessageStream.prototype._read = noop;\n\nPostMessageStream.prototype._write = function (data, encoding, cb) {\n  var message = {\n    target: this._target,\n    data: data\n  };\n\n  this._targetWindow.postMessage(message, this._origin);\n\n  cb();\n}; // util\n\n\nfunction noop() {}","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/node_modules/post-message-stream/index.js"],"names":["DuplexStream","require","Duplex","inherits","module","exports","PostMessageStream","opts","call","objectMode","_name","name","_target","target","_targetWindow","targetWindow","window","_origin","location","origin","_init","_haveSyn","addEventListener","_onMessage","bind","_write","noop","cork","prototype","event","msg","data","source","uncork","push","err","emit","_read","encoding","cb","message","postMessage"],"mappings":"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","sourcesContent":["const DuplexStream = require('readable-stream').Duplex\nconst inherits = require('util').inherits\n\nmodule.exports = PostMessageStream\n\ninherits(PostMessageStream, DuplexStream)\n\nfunction PostMessageStream (opts) {\n  DuplexStream.call(this, {\n    objectMode: true,\n  })\n\n  this._name = opts.name\n  this._target = opts.target\n  this._targetWindow = opts.targetWindow || window\n  this._origin = (opts.targetWindow ? '*' : location.origin)\n\n  // initialization flags\n  this._init = false\n  this._haveSyn = false\n\n  window.addEventListener('message', this._onMessage.bind(this), false)\n  // send syncorization message\n  this._write('SYN', null, noop)\n  this.cork()\n}\n\n// private\nPostMessageStream.prototype._onMessage = function (event) {\n  var msg = event.data\n\n  // validate message\n  if (this._origin !== '*' && event.origin !== this._origin) return\n  if (event.source !== this._targetWindow) return\n  if (typeof msg !== 'object') return\n  if (msg.target !== this._name) return\n  if (!msg.data) return\n\n  if (!this._init) {\n    if (msg.data === 'SYN') {\n      this._haveSyn = true\n      this._write('ACK', null, noop)\n    } else if (msg.data === 'ACK') {\n      this._init = true\n      if (!this._haveSyn) {\n        this._write('ACK', null, noop)\n      }\n      this.uncork()\n    }\n  } else {\n    // forward message\n    try {\n      this.push(msg.data)\n    } catch (err) {\n      this.emit('error', err)\n    }\n  }\n}\n\n// stream plumbing\nPostMessageStream.prototype._read = noop\n\nPostMessageStream.prototype._write = function (data, encoding, cb) {\n  var message = {\n    target: this._target,\n    data: data,\n  }\n  this._targetWindow.postMessage(message, this._origin)\n  cb()\n}\n\n// util\n\nfunction noop () {}\n"]},"metadata":{},"sourceType":"script"}