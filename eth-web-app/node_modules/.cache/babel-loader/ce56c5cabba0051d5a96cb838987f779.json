{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Validator = void 0;\n\nvar json_1 = require(\"../../util/json\");\n\nvar numeric_1 = require(\"../numeric\");\n/**\n * Stores information fetched from the blockchain about the current status of a validator.\n * As an end user, you will not have to create an instance of this class, one will be\n * generated for you to store information about a validator polled from the API functions\n * in [[StakingAPI]].\n */\n\n\nvar Validator =\n/** @class */\nfunction (_super) {\n  __extends(Validator, _super);\n  /**\n   *\n   * @param operator_address validator's operator address\n   * @param consensus_pubkey validator's consensus public key\n   * @param jailed whether the current validator is jailed\n   * @param status unbonded `0`, unbonding `1`, bonded `2`\n   * @param tokens total Luna from all delegations (including self)\n   * @param delegator_shares total shares of all delegators\n   * @param description validator's delegate description\n   * @param unbonding_height if unbonding, height at which this validator began unbonding\n   * @param unbonding_time if unbonding, min time for the validator to complete unbonding\n   * @param commission validator commission\n   * @param min_self_delegation minimum self delegation\n   */\n\n\n  function Validator(operator_address, consensus_pubkey, jailed, status, tokens, delegator_shares, description, unbonding_height, unbonding_time, commission, min_self_delegation) {\n    var _this = _super.call(this) || this;\n\n    _this.operator_address = operator_address;\n    _this.consensus_pubkey = consensus_pubkey;\n    _this.jailed = jailed;\n    _this.status = status;\n    _this.tokens = tokens;\n    _this.delegator_shares = delegator_shares;\n    _this.description = description;\n    _this.unbonding_height = unbonding_height;\n    _this.unbonding_time = unbonding_time;\n    _this.commission = commission;\n    _this.min_self_delegation = min_self_delegation;\n    return _this;\n  }\n\n  Validator.prototype.toData = function () {\n    return {\n      operator_address: this.operator_address,\n      consensus_pubkey: this.consensus_pubkey,\n      jailed: this.jailed,\n      status: this.status,\n      tokens: this.tokens.toString(),\n      delegator_shares: this.delegator_shares.toString(),\n      description: this.description,\n      unbonding_height: this.unbonding_height.toFixed(),\n      unbonding_time: this.unbonding_time.toISOString(),\n      commission: this.commission.toData(),\n      min_self_delegation: this.min_self_delegation.toString()\n    };\n  };\n\n  Validator.fromData = function (data) {\n    return new Validator(data.operator_address, data.consensus_pubkey, data.jailed, data.status, new numeric_1.Int(data.tokens), new numeric_1.Dec(data.delegator_shares), data.description, Number.parseInt(data.unbonding_height), new Date(data.unbonding_time), Validator.Commission.fromData(data.commission), new numeric_1.Int(data.min_self_delegation));\n  };\n\n  return Validator;\n}(json_1.JSONSerializable);\n\nexports.Validator = Validator;\n\n(function (Validator) {\n  var CommissionRates =\n  /** @class */\n  function (_super) {\n    __extends(CommissionRates, _super);\n    /**\n     * @param rate current commission rate\n     * @param max_rate max commission rate\n     * @param max_change_rate max percentage commission can change in 24hrs\n     */\n\n\n    function CommissionRates(rate, max_rate, max_change_rate) {\n      var _this = _super.call(this) || this;\n\n      _this.rate = rate;\n      _this.max_rate = max_rate;\n      _this.max_change_rate = max_change_rate;\n      return _this;\n    }\n\n    CommissionRates.fromData = function (data) {\n      var rate = data.rate,\n          max_rate = data.max_rate,\n          max_change_rate = data.max_change_rate;\n      return new CommissionRates(new numeric_1.Dec(rate), new numeric_1.Dec(max_rate), new numeric_1.Dec(max_change_rate));\n    };\n\n    CommissionRates.prototype.toData = function () {\n      var _a = this,\n          rate = _a.rate,\n          max_rate = _a.max_rate,\n          max_change_rate = _a.max_change_rate;\n\n      return {\n        rate: rate.toString(),\n        max_rate: max_rate.toString(),\n        max_change_rate: max_change_rate.toString()\n      };\n    };\n\n    return CommissionRates;\n  }(json_1.JSONSerializable);\n\n  Validator.CommissionRates = CommissionRates;\n\n  var Commission =\n  /** @class */\n  function (_super) {\n    __extends(Commission, _super);\n    /**\n     * @param commission_rates commission rates\n     * @param update_time time at which commission was last updated\n     */\n\n\n    function Commission(commission_rates, update_time) {\n      var _this = _super.call(this) || this;\n\n      _this.commission_rates = commission_rates;\n      _this.update_time = update_time;\n      return _this;\n    }\n\n    Commission.prototype.toData = function () {\n      return {\n        commission_rates: this.commission_rates.toData(),\n        update_time: this.update_time.toISOString()\n      };\n    };\n\n    Commission.fromData = function (data) {\n      return new Commission(CommissionRates.fromData(data.commission_rates), new Date(data.update_time));\n    };\n\n    return Commission;\n  }(json_1.JSONSerializable);\n\n  Validator.Commission = Commission;\n})(Validator = exports.Validator || (exports.Validator = {}));\n\nexports.Validator = Validator;","map":{"version":3,"sources":["../../../src/core/staking/Validator.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Validator = void 0;\nvar json_1 = require(\"../../util/json\");\nvar numeric_1 = require(\"../numeric\");\n/**\n * Stores information fetched from the blockchain about the current status of a validator.\n * As an end user, you will not have to create an instance of this class, one will be\n * generated for you to store information about a validator polled from the API functions\n * in [[StakingAPI]].\n */\nvar Validator = /** @class */ (function (_super) {\n    __extends(Validator, _super);\n    /**\n     *\n     * @param operator_address validator's operator address\n     * @param consensus_pubkey validator's consensus public key\n     * @param jailed whether the current validator is jailed\n     * @param status unbonded `0`, unbonding `1`, bonded `2`\n     * @param tokens total Luna from all delegations (including self)\n     * @param delegator_shares total shares of all delegators\n     * @param description validator's delegate description\n     * @param unbonding_height if unbonding, height at which this validator began unbonding\n     * @param unbonding_time if unbonding, min time for the validator to complete unbonding\n     * @param commission validator commission\n     * @param min_self_delegation minimum self delegation\n     */\n    function Validator(operator_address, consensus_pubkey, jailed, status, tokens, delegator_shares, description, unbonding_height, unbonding_time, commission, min_self_delegation) {\n        var _this = _super.call(this) || this;\n        _this.operator_address = operator_address;\n        _this.consensus_pubkey = consensus_pubkey;\n        _this.jailed = jailed;\n        _this.status = status;\n        _this.tokens = tokens;\n        _this.delegator_shares = delegator_shares;\n        _this.description = description;\n        _this.unbonding_height = unbonding_height;\n        _this.unbonding_time = unbonding_time;\n        _this.commission = commission;\n        _this.min_self_delegation = min_self_delegation;\n        return _this;\n    }\n    Validator.prototype.toData = function () {\n        return {\n            operator_address: this.operator_address,\n            consensus_pubkey: this.consensus_pubkey,\n            jailed: this.jailed,\n            status: this.status,\n            tokens: this.tokens.toString(),\n            delegator_shares: this.delegator_shares.toString(),\n            description: this.description,\n            unbonding_height: this.unbonding_height.toFixed(),\n            unbonding_time: this.unbonding_time.toISOString(),\n            commission: this.commission.toData(),\n            min_self_delegation: this.min_self_delegation.toString(),\n        };\n    };\n    Validator.fromData = function (data) {\n        return new Validator(data.operator_address, data.consensus_pubkey, data.jailed, data.status, new numeric_1.Int(data.tokens), new numeric_1.Dec(data.delegator_shares), data.description, Number.parseInt(data.unbonding_height), new Date(data.unbonding_time), Validator.Commission.fromData(data.commission), new numeric_1.Int(data.min_self_delegation));\n    };\n    return Validator;\n}(json_1.JSONSerializable));\nexports.Validator = Validator;\n(function (Validator) {\n    var CommissionRates = /** @class */ (function (_super) {\n        __extends(CommissionRates, _super);\n        /**\n         * @param rate current commission rate\n         * @param max_rate max commission rate\n         * @param max_change_rate max percentage commission can change in 24hrs\n         */\n        function CommissionRates(rate, max_rate, max_change_rate) {\n            var _this = _super.call(this) || this;\n            _this.rate = rate;\n            _this.max_rate = max_rate;\n            _this.max_change_rate = max_change_rate;\n            return _this;\n        }\n        CommissionRates.fromData = function (data) {\n            var rate = data.rate, max_rate = data.max_rate, max_change_rate = data.max_change_rate;\n            return new CommissionRates(new numeric_1.Dec(rate), new numeric_1.Dec(max_rate), new numeric_1.Dec(max_change_rate));\n        };\n        CommissionRates.prototype.toData = function () {\n            var _a = this, rate = _a.rate, max_rate = _a.max_rate, max_change_rate = _a.max_change_rate;\n            return {\n                rate: rate.toString(),\n                max_rate: max_rate.toString(),\n                max_change_rate: max_change_rate.toString(),\n            };\n        };\n        return CommissionRates;\n    }(json_1.JSONSerializable));\n    Validator.CommissionRates = CommissionRates;\n    var Commission = /** @class */ (function (_super) {\n        __extends(Commission, _super);\n        /**\n         * @param commission_rates commission rates\n         * @param update_time time at which commission was last updated\n         */\n        function Commission(commission_rates, update_time) {\n            var _this = _super.call(this) || this;\n            _this.commission_rates = commission_rates;\n            _this.update_time = update_time;\n            return _this;\n        }\n        Commission.prototype.toData = function () {\n            return {\n                commission_rates: this.commission_rates.toData(),\n                update_time: this.update_time.toISOString(),\n            };\n        };\n        Commission.fromData = function (data) {\n            return new Commission(CommissionRates.fromData(data.commission_rates), new Date(data.update_time));\n        };\n        return Commission;\n    }(json_1.JSONSerializable));\n    Validator.Commission = Commission;\n})(Validator = exports.Validator || (exports.Validator = {}));\nexports.Validator = Validator;\n//# sourceMappingURL=Validator.js.map"]},"metadata":{},"sourceType":"script"}