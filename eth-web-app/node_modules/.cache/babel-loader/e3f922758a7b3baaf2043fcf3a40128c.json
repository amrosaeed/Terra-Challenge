{"ast":null,"code":"import _objectSpread from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import{useRecoilValue}from\"recoil\";import BuyLinks,{ICON_SIZE}from\"../../components/BuyLinks\";import getLinks from\"../../ethereum/uniswap\";import{networkNameQuery}from\"../../database/network\";import{itemBySymbolQuery}from\"../../database/asset\";import{ReactComponent as Uniswap}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../images/Uniswap.svg\";import useOpenToConnect from\"./useOpenToConnect\";import AddToMetamask from\"./AddToMetamask\";import styles from\"./WhereToBuy.module.scss\";var USDT={homestead:\"0xdAC17F958D2ee523a2206206994597C13D831ec7\",ropsten:\"0x6ee856ae55b6e1a249f04cd3b947141bc146273c\"};var WhereToBuy=function WhereToBuy(){var name=useRecoilValue(networkNameQuery);var ust=useRecoilValue(itemBySymbolQuery(\"UST\"));var _getLinks=getLinks({input:USDT[name],output:ust.token}),swap=_getLinks.swap;var handleClick=useOpenToConnect(swap);var uniswap={icon:/*#__PURE__*/_jsx(Uniswap,_objectSpread({className:styles.uniswap},ICON_SIZE)),name:\"Uniswap\",attrs:!handleClick?{href:swap}:{onClick:handleClick}};return/*#__PURE__*/_jsx(BuyLinks,{type:\"eth\",className:styles.component,action:/*#__PURE__*/_jsx(AddToMetamask,_objectSpread(_objectSpread({},ust),{},{children:\"Add UST to MetaMask\"})),links:[uniswap]});};export default WhereToBuy;","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/pages/home/WhereToBuy.tsx"],"names":["useRecoilValue","BuyLinks","ICON_SIZE","getLinks","networkNameQuery","itemBySymbolQuery","useOpenToConnect","AddToMetamask","styles","USDT","homestead","ropsten","WhereToBuy","name","ust","input","output","token","swap","handleClick","uniswap","icon","attrs","href","onClick","component"],"mappings":"sMAAA,OAASA,cAAT,KAA+B,QAA/B,CAEA,MAAOC,CAAAA,QAAP,EAAmBC,SAAnB,KAAoC,2BAApC,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAASC,gBAAT,KAAiC,wBAAjC,CACA,OAASC,iBAAT,KAAkC,sBAAlC,C,oGAEA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAEA,GAAMC,CAAAA,IAAwB,CAAG,CAC/BC,SAAS,CAAE,4CADoB,CAE/BC,OAAO,CAAE,4CAFsB,CAAjC,CAKA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMC,CAAAA,IAAI,CAAGb,cAAc,CAACI,gBAAD,CAA3B,CACA,GAAMU,CAAAA,GAAG,CAAGd,cAAc,CAACK,iBAAiB,CAAC,KAAD,CAAlB,CAA1B,CAFuB,cAGNF,QAAQ,CAAC,CAAEY,KAAK,CAAEN,IAAI,CAACI,IAAD,CAAb,CAAqBG,MAAM,CAAEF,GAAG,CAACG,KAAjC,CAAD,CAHF,CAGfC,IAHe,WAGfA,IAHe,CAIvB,GAAMC,CAAAA,WAAW,CAAGb,gBAAgB,CAACY,IAAD,CAApC,CAEA,GAAME,CAAAA,OAAO,CAAG,CACdC,IAAI,cAAE,KAAC,OAAD,gBAAS,SAAS,CAAEb,MAAM,CAACY,OAA3B,EAAwClB,SAAxC,EADQ,CAEdW,IAAI,CAAE,SAFQ,CAGdS,KAAK,CAAE,CAACH,WAAD,CAAe,CAAEI,IAAI,CAAEL,IAAR,CAAf,CAAgC,CAAEM,OAAO,CAAEL,WAAX,CAHzB,CAAhB,CAMA,mBACE,KAAC,QAAD,EACE,IAAI,CAAC,KADP,CAEE,SAAS,CAAEX,MAAM,CAACiB,SAFpB,CAGE,MAAM,cAAE,KAAC,aAAD,gCAAmBX,GAAnB,uCAHV,CAIE,KAAK,CAAE,CAACM,OAAD,CAJT,EADF,CAQD,CApBD,CAsBA,cAAeR,CAAAA,UAAf","sourcesContent":["import { useRecoilValue } from \"recoil\"\nimport { Dictionary } from \"ramda\"\nimport BuyLinks, { ICON_SIZE } from \"../../components/BuyLinks\"\nimport getLinks from \"../../ethereum/uniswap\"\nimport { networkNameQuery } from \"../../database/network\"\nimport { itemBySymbolQuery } from \"../../database/asset\"\nimport { ReactComponent as Uniswap } from \"../../images/Uniswap.svg\"\nimport useOpenToConnect from \"./useOpenToConnect\"\nimport AddToMetamask from \"./AddToMetamask\"\nimport styles from \"./WhereToBuy.module.scss\"\n\nconst USDT: Dictionary<string> = {\n  homestead: \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n  ropsten: \"0x6ee856ae55b6e1a249f04cd3b947141bc146273c\",\n}\n\nconst WhereToBuy = () => {\n  const name = useRecoilValue(networkNameQuery)\n  const ust = useRecoilValue(itemBySymbolQuery(\"UST\"))!\n  const { swap } = getLinks({ input: USDT[name], output: ust.token })\n  const handleClick = useOpenToConnect(swap)\n\n  const uniswap = {\n    icon: <Uniswap className={styles.uniswap} {...ICON_SIZE} />,\n    name: \"Uniswap\",\n    attrs: !handleClick ? { href: swap } : { onClick: handleClick },\n  }\n\n  return (\n    <BuyLinks\n      type=\"eth\"\n      className={styles.component}\n      action={<AddToMetamask {...ust}>Add UST to MetaMask</AddToMetamask>}\n      links={[uniswap]}\n    />\n  )\n}\n\nexport default WhereToBuy\n"]},"metadata":{},"sourceType":"module"}