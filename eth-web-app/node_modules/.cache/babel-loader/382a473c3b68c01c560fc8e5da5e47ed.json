{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AggregateExchangeRatePrevote = void 0;\n\nvar json_1 = require(\"../../util/json\");\n/**\n * Stores information about data about Oracle aggregate prevotes fetched from the blockchain.\n */\n\n\nvar AggregateExchangeRatePrevote =\n/** @class */\nfunction (_super) {\n  __extends(AggregateExchangeRatePrevote, _super);\n  /**\n   * @param hash aggregate vote hash\n   * @param voter validator\n   * @param submit_block block during which aggregate prevote was submitted\n   */\n\n\n  function AggregateExchangeRatePrevote(hash, voter, submit_block) {\n    var _this = _super.call(this) || this;\n\n    _this.hash = hash;\n    _this.voter = voter;\n    _this.submit_block = submit_block;\n    return _this;\n  }\n\n  AggregateExchangeRatePrevote.fromData = function (data) {\n    var hash = data.hash,\n        voter = data.voter,\n        submit_block = data.submit_block;\n    return new AggregateExchangeRatePrevote(hash, voter, Number.parseInt(submit_block));\n  };\n\n  AggregateExchangeRatePrevote.prototype.toData = function () {\n    var _a = this,\n        hash = _a.hash,\n        voter = _a.voter,\n        submit_block = _a.submit_block;\n\n    return {\n      hash: hash,\n      voter: voter,\n      submit_block: submit_block.toFixed()\n    };\n  };\n\n  return AggregateExchangeRatePrevote;\n}(json_1.JSONSerializable);\n\nexports.AggregateExchangeRatePrevote = AggregateExchangeRatePrevote;","map":{"version":3,"sources":["../../../src/core/oracle/AggregateExchangeRatePrevote.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AAGA;;AAEG;;;AACH,IAAA,4BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkD,EAAA,SAAA,CAAA,4BAAA,EAAA,MAAA,CAAA;AAGhD;;;;AAIG;;;AACH,WAAA,4BAAA,CACS,IADT,EAES,KAFT,EAGS,YAHT,EAG6B;AAH7B,QAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IALT;;AACS,IAAA,KAAA,CAAA,IAAA,GAAA,IAAA;AACA,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA,IAAA,KAAA,CAAA,YAAA,GAAA,YAAA;;AAGR;;AAEa,EAAA,4BAAA,CAAA,QAAA,GAAd,UACE,IADF,EACyC;AAE/B,QAAA,IAAI,GAA0B,IAAI,CAA9B,IAAJ;AAAA,QAAM,KAAK,GAAmB,IAAI,CAAvB,KAAX;AAAA,QAAa,YAAY,GAAK,IAAI,CAAT,YAAzB;AACR,WAAO,IAAI,4BAAJ,CACL,IADK,EAEL,KAFK,EAGL,MAAM,CAAC,QAAP,CAAgB,YAAhB,CAHK,CAAP;AAKD,GATa;;AAWP,EAAA,4BAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAgC,IAAhC;AAAA,QAAE,IAAI,GAAA,EAAA,CAAA,IAAN;AAAA,QAAQ,KAAK,GAAA,EAAA,CAAA,KAAb;AAAA,QAAe,YAAY,GAAA,EAAA,CAAA,YAA3B;;AACN,WAAO;AACL,MAAA,IAAI,EAAA,IADC;AAEL,MAAA,KAAK,EAAA,KAFA;AAGL,MAAA,YAAY,EAAE,YAAY,CAAC,OAAb;AAHT,KAAP;AAKD,GAPM;;AAQT,SAAA,4BAAA;AAAC,CAnCD,CAAkD,MAAA,CAAA,gBAAlD,CAAA;;AAAa,OAAA,CAAA,4BAAA,GAAA,4BAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AggregateExchangeRatePrevote = void 0;\nvar json_1 = require(\"../../util/json\");\n/**\n * Stores information about data about Oracle aggregate prevotes fetched from the blockchain.\n */\nvar AggregateExchangeRatePrevote = /** @class */ (function (_super) {\n    __extends(AggregateExchangeRatePrevote, _super);\n    /**\n     * @param hash aggregate vote hash\n     * @param voter validator\n     * @param submit_block block during which aggregate prevote was submitted\n     */\n    function AggregateExchangeRatePrevote(hash, voter, submit_block) {\n        var _this = _super.call(this) || this;\n        _this.hash = hash;\n        _this.voter = voter;\n        _this.submit_block = submit_block;\n        return _this;\n    }\n    AggregateExchangeRatePrevote.fromData = function (data) {\n        var hash = data.hash, voter = data.voter, submit_block = data.submit_block;\n        return new AggregateExchangeRatePrevote(hash, voter, Number.parseInt(submit_block));\n    };\n    AggregateExchangeRatePrevote.prototype.toData = function () {\n        var _a = this, hash = _a.hash, voter = _a.voter, submit_block = _a.submit_block;\n        return {\n            hash: hash,\n            voter: voter,\n            submit_block: submit_block.toFixed(),\n        };\n    };\n    return AggregateExchangeRatePrevote;\n}(json_1.JSONSerializable));\nexports.AggregateExchangeRatePrevote = AggregateExchangeRatePrevote;\n//# sourceMappingURL=AggregateExchangeRatePrevote.js.map"]},"metadata":{},"sourceType":"script"}