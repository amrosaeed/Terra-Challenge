{"ast":null,"code":"import BigNumber from\"bignumber.js\";import{SMALLEST}from\"../constants\";export var getMIRAnnualRewards=function getMIRAnnualRewards(){var now=arguments.length>0&&arguments[0]!==undefined?arguments[0]:Date.now();var isMIR=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var GENESIS=1607022000000;var YEAR_TO_MILLISECONDS=31536000000;var rewards=[3431250,1715625,857813,428906];var index=Math.max(0,Math.floor((now-GENESIS)/YEAR_TO_MILLISECONDS));var reward=rewards[index];return!reward?undefined:isMIR?reward*3:reward;};export var apr=function apr(params){var MIRAnnualRewards=params.MIRAnnualRewards,MIRPrice=params.MIRPrice;var liquidityValue=params.liquidityValue,stakedLpShare=params.stakedLpShare,totalLpShare=params.totalLpShare;var MIRAnnualRewardsValue=new BigNumber(MIRAnnualRewards).times(MIRPrice);var stakedRatio=new BigNumber(stakedLpShare).div(totalLpShare);var liquidityAmount=new BigNumber(liquidityValue).div(SMALLEST);var numerator=MIRAnnualRewardsValue;var denominator=liquidityAmount.times(stakedRatio);return denominator.gt(0)?numerator.div(denominator).toString():\"0\";};","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/database/calc.ts"],"names":["BigNumber","SMALLEST","getMIRAnnualRewards","now","Date","isMIR","GENESIS","YEAR_TO_MILLISECONDS","rewards","index","Math","max","floor","reward","undefined","apr","params","MIRAnnualRewards","MIRPrice","liquidityValue","stakedLpShare","totalLpShare","MIRAnnualRewardsValue","times","stakedRatio","div","liquidityAmount","numerator","denominator","gt","toString"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,KAAsB,cAAtB,CACA,OAASC,QAAT,KAAyB,cAAzB,CAEA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAqC,IAApCC,CAAAA,GAAoC,2DAA9BC,IAAI,CAACD,GAAL,EAA8B,IAAlBE,CAAAA,KAAkB,2DAAV,KAAU,CACtE,GAAMC,CAAAA,OAAO,CAAG,aAAhB,CACA,GAAMC,CAAAA,oBAAoB,CAAG,WAA7B,CACA,GAAMC,CAAAA,OAAO,CAAG,CAAC,OAAD,CAAU,OAAV,CAAmB,MAAnB,CAA2B,MAA3B,CAAhB,CACA,GAAMC,CAAAA,KAAK,CAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,CAAYD,IAAI,CAACE,KAAL,CAAW,CAACT,GAAG,CAAGG,OAAP,EAAkBC,oBAA7B,CAAZ,CAAd,CACA,GAAMM,CAAAA,MAAM,CAAGL,OAAO,CAACC,KAAD,CAAtB,CACA,MAAO,CAACI,MAAD,CAAUC,SAAV,CAAsBT,KAAK,CAAGQ,MAAM,CAAG,CAAZ,CAAgBA,MAAlD,CACD,CAPM,CAiBP,MAAO,IAAME,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACC,MAAD,CAAoB,IAC7BC,CAAAA,gBAD6B,CACED,MADF,CAC7BC,gBAD6B,CACXC,QADW,CACEF,MADF,CACXE,QADW,IAE7BC,CAAAA,cAF6B,CAEmBH,MAFnB,CAE7BG,cAF6B,CAEbC,aAFa,CAEmBJ,MAFnB,CAEbI,aAFa,CAEEC,YAFF,CAEmBL,MAFnB,CAEEK,YAFF,CAIrC,GAAMC,CAAAA,qBAAqB,CAAG,GAAItB,CAAAA,SAAJ,CAAciB,gBAAd,EAAgCM,KAAhC,CAAsCL,QAAtC,CAA9B,CACA,GAAMM,CAAAA,WAAW,CAAG,GAAIxB,CAAAA,SAAJ,CAAcoB,aAAd,EAA6BK,GAA7B,CAAiCJ,YAAjC,CAApB,CACA,GAAMK,CAAAA,eAAe,CAAG,GAAI1B,CAAAA,SAAJ,CAAcmB,cAAd,EAA8BM,GAA9B,CAAkCxB,QAAlC,CAAxB,CAEA,GAAM0B,CAAAA,SAAS,CAAGL,qBAAlB,CACA,GAAMM,CAAAA,WAAW,CAAGF,eAAe,CAACH,KAAhB,CAAsBC,WAAtB,CAApB,CAEA,MAAOI,CAAAA,WAAW,CAACC,EAAZ,CAAe,CAAf,EAAoBF,SAAS,CAACF,GAAV,CAAcG,WAAd,EAA2BE,QAA3B,EAApB,CAA4D,GAAnE,CACD,CAZM","sourcesContent":["import BigNumber from \"bignumber.js\"\nimport { SMALLEST } from \"../constants\"\n\nexport const getMIRAnnualRewards = (now = Date.now(), isMIR = false) => {\n  const GENESIS = 1607022000000\n  const YEAR_TO_MILLISECONDS = 31536000000\n  const rewards = [3431250, 1715625, 857813, 428906]\n  const index = Math.max(0, Math.floor((now - GENESIS) / YEAR_TO_MILLISECONDS))\n  const reward = rewards[index]\n  return !reward ? undefined : isMIR ? reward * 3 : reward\n}\n\ninterface Params {\n  MIRAnnualRewards: string\n  MIRPrice: string\n  liquidityValue: string\n  stakedLpShare: string\n  totalLpShare: string\n}\n\nexport const apr = (params: Params) => {\n  const { MIRAnnualRewards, MIRPrice } = params\n  const { liquidityValue, stakedLpShare, totalLpShare } = params\n\n  const MIRAnnualRewardsValue = new BigNumber(MIRAnnualRewards).times(MIRPrice)\n  const stakedRatio = new BigNumber(stakedLpShare).div(totalLpShare)\n  const liquidityAmount = new BigNumber(liquidityValue).div(SMALLEST)\n\n  const numerator = MIRAnnualRewardsValue\n  const denominator = liquidityAmount.times(stakedRatio)\n\n  return denominator.gt(0) ? numerator.div(denominator).toString() : \"0\"\n}\n"]},"metadata":{},"sourceType":"module"}