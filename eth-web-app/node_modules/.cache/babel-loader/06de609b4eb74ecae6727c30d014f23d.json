{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import Card from\"../components/Card\";import Icon from\"../components/Icon\";import MetaMask from\"../images/wallets/Metamask.png\";import WalletConnect from\"../images/wallets/WalletConnect.png\";import CoinbaseWallet from\"../images/wallets/CoinbaseWallet.png\";import useOnboard from\"../ethereum/useOnboard\";import{useSelectWalletModal}from\"../database/selectWalletModal\";import useWalletConnect from\"./useWalletConnect\";import useCoinbase from\"./useCoinbase\";import styles from\"./SelectWallet.module.scss\";var SelectWallet=function SelectWallet(){var _useSelectWalletModal=useSelectWalletModal(),close=_useSelectWalletModal.close;var _useOnboard=useOnboard(),onClickMetaMask=_useOnboard.onClick;var _useWalletConnect=useWalletConnect(),onClickWalletConnect=_useWalletConnect.onClick;var _useCoinbase=useCoinbase(),onClickCoinbase=_useCoinbase.onClick;var buttons=[{src:MetaMask,label:\"MetaMask\",onClick:onClickMetaMask},{src:WalletConnect,label:\"WalletConnect\",onClick:onClickWalletConnect},{src:CoinbaseWallet,label:\"Coinbase Wallet\",onClick:onClickCoinbase}];return/*#__PURE__*/_jsxs(Card,{className:styles.card,children:[/*#__PURE__*/_jsxs(\"header\",{className:styles.header,children:[/*#__PURE__*/_jsx(\"h1\",{className:styles.title,children:\"Connect to a wallet\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.close,onClick:close,children:/*#__PURE__*/_jsx(Icon,{name:\"close\",size:24})})]}),/*#__PURE__*/_jsx(\"ul\",{children:buttons.map(function(_ref){var src=_ref.src,label=_ref.label,onClick=_ref.onClick;return/*#__PURE__*/_jsx(\"li\",{className:styles.item,children:/*#__PURE__*/_jsxs(\"button\",{className:styles.button,onClick:onClick,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.label,children:label}),/*#__PURE__*/_jsx(\"img\",{src:src,width:24,height:24,alt:\"\"})]})},label);})})]});};export default SelectWallet;","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/layouts/SelectWallet.tsx"],"names":["Card","Icon","MetaMask","WalletConnect","CoinbaseWallet","useOnboard","useSelectWalletModal","useWalletConnect","useCoinbase","styles","SelectWallet","close","onClickMetaMask","onClick","onClickWalletConnect","onClickCoinbase","buttons","src","label","card","header","title","map","item","button"],"mappings":"wFAAA,MAAOA,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,qCAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,CACA,OAASC,oBAAT,KAAqC,+BAArC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,2BACPJ,oBAAoB,EADb,CACjBK,KADiB,uBACjBA,KADiB,iBAEYN,UAAU,EAFtB,CAERO,eAFQ,aAEjBC,OAFiB,uBAGiBN,gBAAgB,EAHjC,CAGRO,oBAHQ,mBAGjBD,OAHiB,kBAIYL,WAAW,EAJvB,CAIRO,eAJQ,cAIjBF,OAJiB,CAMzB,GAAMG,CAAAA,OAAO,CAAG,CACd,CACEC,GAAG,CAAEf,QADP,CAEEgB,KAAK,CAAE,UAFT,CAGEL,OAAO,CAAED,eAHX,CADc,CAMd,CACEK,GAAG,CAAEd,aADP,CAEEe,KAAK,CAAE,eAFT,CAGEL,OAAO,CAAEC,oBAHX,CANc,CAWd,CACEG,GAAG,CAAEb,cADP,CAEEc,KAAK,CAAE,iBAFT,CAGEL,OAAO,CAAEE,eAHX,CAXc,CAAhB,CAkBA,mBACE,MAAC,IAAD,EAAM,SAAS,CAAEN,MAAM,CAACU,IAAxB,wBACE,gBAAQ,SAAS,CAAEV,MAAM,CAACW,MAA1B,wBACE,WAAI,SAAS,CAAEX,MAAM,CAACY,KAAtB,iCADF,cAEE,eAAQ,SAAS,CAAEZ,MAAM,CAACE,KAA1B,CAAiC,OAAO,CAAEA,KAA1C,uBACE,KAAC,IAAD,EAAM,IAAI,CAAC,OAAX,CAAmB,IAAI,CAAE,EAAzB,EADF,EAFF,GADF,cAQE,oBACGK,OAAO,CAACM,GAAR,CAAY,kBAAGL,CAAAA,GAAH,MAAGA,GAAH,CAAQC,KAAR,MAAQA,KAAR,CAAeL,OAAf,MAAeA,OAAf,oBACX,WAAI,SAAS,CAAEJ,MAAM,CAACc,IAAtB,uBACE,gBAAQ,SAAS,CAAEd,MAAM,CAACe,MAA1B,CAAkC,OAAO,CAAEX,OAA3C,wBACE,aAAM,SAAS,CAAEJ,MAAM,CAACS,KAAxB,UAAgCA,KAAhC,EADF,cAEE,YAAK,GAAG,CAAED,GAAV,CAAe,KAAK,CAAE,EAAtB,CAA0B,MAAM,CAAE,EAAlC,CAAsC,GAAG,CAAC,EAA1C,EAFF,GADF,EAAiCC,KAAjC,CADW,EAAZ,CADH,EARF,GADF,CAqBD,CA7CD,CA+CA,cAAeR,CAAAA,YAAf","sourcesContent":["import Card from \"../components/Card\"\nimport Icon from \"../components/Icon\"\nimport MetaMask from \"../images/wallets/Metamask.png\"\nimport WalletConnect from \"../images/wallets/WalletConnect.png\"\nimport CoinbaseWallet from \"../images/wallets/CoinbaseWallet.png\"\nimport useOnboard from \"../ethereum/useOnboard\"\nimport { useSelectWalletModal } from \"../database/selectWalletModal\"\nimport useWalletConnect from \"./useWalletConnect\"\nimport useCoinbase from \"./useCoinbase\"\nimport styles from \"./SelectWallet.module.scss\"\n\nconst SelectWallet = () => {\n  const { close } = useSelectWalletModal()\n  const { onClick: onClickMetaMask } = useOnboard()\n  const { onClick: onClickWalletConnect } = useWalletConnect()\n  const { onClick: onClickCoinbase } = useCoinbase()\n\n  const buttons = [\n    {\n      src: MetaMask,\n      label: \"MetaMask\",\n      onClick: onClickMetaMask,\n    },\n    {\n      src: WalletConnect,\n      label: \"WalletConnect\",\n      onClick: onClickWalletConnect,\n    },\n    {\n      src: CoinbaseWallet,\n      label: \"Coinbase Wallet\",\n      onClick: onClickCoinbase,\n    },\n  ]\n\n  return (\n    <Card className={styles.card}>\n      <header className={styles.header}>\n        <h1 className={styles.title}>Connect to a wallet</h1>\n        <button className={styles.close} onClick={close}>\n          <Icon name=\"close\" size={24} />\n        </button>\n      </header>\n\n      <ul>\n        {buttons.map(({ src, label, onClick }) => (\n          <li className={styles.item} key={label}>\n            <button className={styles.button} onClick={onClick}>\n              <span className={styles.label}>{label}</span>\n              <img src={src} width={24} height={24} alt=\"\" />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </Card>\n  )\n}\n\nexport default SelectWallet\n"]},"metadata":{},"sourceType":"module"}