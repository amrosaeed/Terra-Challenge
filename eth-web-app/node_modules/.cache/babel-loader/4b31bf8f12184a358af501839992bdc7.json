{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebSocketClient = void 0;\n\nvar events_1 = require(\"events\");\n\nvar ws_1 = __importDefault(require(\"ws\"));\n\nvar hash_1 = require(\"../util/hash\");\n\nvar escapeSingleQuotes = function escapeSingleQuotes(str) {\n  return str.replace(/'/g, \"\\\\'\");\n};\n\nfunction makeQueryParams(query) {\n  var queryBuilder = [];\n\n  for (var _i = 0, _a = Object.keys(query); _i < _a.length; _i++) {\n    var key = _a[_i];\n    var queryItem = void 0;\n    var value = query[key]; // if value is scalar\n\n    if (!Array.isArray(value)) {\n      switch (typeof value) {\n        case 'number':\n          queryItem = key + \"=\" + value;\n          break;\n\n        case 'string':\n          queryItem = key + \"='\" + escapeSingleQuotes(value) + \"'\";\n          break;\n\n        default:\n          // Date\n          queryItem = key + \"=\" + value.toISOString();\n      }\n    } else {\n      switch (value[0]) {\n        case '>':\n        case '<':\n        case '<=':\n        case '>=':\n          if (typeof value[1] !== 'number') {\n            queryItem = \"\" + key + value[0] + value[1].toISOString();\n          } else {\n            queryItem = \"\" + key + value[0] + value[1];\n          }\n\n          break;\n\n        case 'CONTAINS':\n          queryItem = key + \" CONTAINS '\" + escapeSingleQuotes(value[1]) + \"'\";\n          break;\n\n        case 'EXISTS':\n          queryItem = key + \" EXISTS\";\n          break;\n      }\n    }\n\n    queryBuilder.push(queryItem);\n  }\n\n  return queryBuilder.join(' AND ');\n}\n/**\n * An object repesenting a connection to a Terra node's WebSocket RPC endpoint.\n * This allows for subscribing to Tendermint events through WebSocket.\n *\n * ### Events\n * **error** emitted when error raises\n * **connect** emitted after connection establishment\n * **reconnect** emitted upon every attempt of reconnection\n * **destroyed** emitted when socket has been destroyed\n *\n * ### Example\n *\n * ```ts\n * import { WebSocketClient } from '@terra-money/terra.js';\n *\n * const wsclient = new WebSocketClient(\"ws://localhost:26657/websocket\");\n *\n * wsclient.subscribe('NewBlock', {}, (data) => {\n *    console.log(data.value);\n *\n *    // close after receiving one block.\n *    wsclient.destroy();\n * })\n *\n * wsclient.subscribe(\n * 'Tx',\n *  {\n *    'message.action': 'send',\n *    'message.sender': ['CONTAINS', 'terra1...'],\n *  },\n *  (data) => {\n *    console.log(data.value);\n *\n *   // close after receiving one send Tx\n *   wsclient.destroy();\n * });\n *\n * ```\n */\n\n\nvar WebSocketClient =\n/** @class */\nfunction (_super) {\n  __extends(WebSocketClient, _super);\n  /**\n   * WebSocketClient constructor\n   * @param URL The WebSocket endpoint URL on the Tendermint RPC server.\n   *            Ex: ws://localhost:26657/websocket\n   * @param reconnectCount 0 for not to attempt reconnect, -1 for infinite, > 0 for number of times to attempt\n   * @param reconnectInterval retry interval in milliseconds\n   */\n\n\n  function WebSocketClient(URL, reconnectCount, reconnectInterval) {\n    if (reconnectCount === void 0) {\n      reconnectCount = 0;\n    }\n\n    if (reconnectInterval === void 0) {\n      reconnectInterval = 1000;\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.URL = URL;\n    _this.reconnectCount = reconnectCount;\n    _this.reconnectInterval = reconnectInterval;\n    _this._reconnectCount = _this.reconnectCount;\n    _this.isConnected = false;\n    _this.shouldAttemptReconnect = !!_this.reconnectInterval;\n    return _this;\n  }\n  /**\n   * Destroys class as well as socket\n   */\n\n\n  WebSocketClient.prototype.destroy = function () {\n    this.shouldAttemptReconnect = false;\n    this.reconnectTimeoutId && clearTimeout(this.reconnectTimeoutId);\n    this.socket && this.socket.close();\n  };\n\n  WebSocketClient.prototype.start = function () {\n    this.socket = new ws_1.default(this.URL);\n    this.socket.onopen = this.onOpen.bind(this);\n    this.socket.onmessage = this.onMessage.bind(this);\n    this.socket.onclose = this.onClose.bind(this);\n\n    this.socket.onerror = function () {\n      return undefined;\n    };\n  };\n\n  WebSocketClient.prototype.onOpen = function () {\n    this.isConnected = true;\n    this.emit('connect'); // reset reconnectCount after connection establishment\n\n    this._reconnectCount = this.reconnectCount;\n    this.socket.send(JSON.stringify({\n      jsonrpc: '2.0',\n      method: 'subscribe',\n      params: [this.queryParams],\n      id: 1\n    }));\n  };\n\n  WebSocketClient.prototype.onMessage = function (message) {\n    try {\n      var parsedData = JSON.parse(message.data.toString());\n\n      if (this.callback && parsedData.result && parsedData.result.query === this.queryParams) {\n        // this.emit('message', parsedData.result.data);\n        this.callback(parsedData.result.data);\n      }\n    } catch (err) {\n      this.emit('error', err);\n    }\n  };\n\n  WebSocketClient.prototype.onClose = function () {\n    var _this = this;\n\n    this.isConnected = false;\n\n    if (this.shouldAttemptReconnect && (this._reconnectCount > 0 || this._reconnectCount === -1)) {\n      if (this._reconnectCount !== -1) {\n        this._reconnectCount--;\n      }\n\n      this.reconnectTimeoutId && clearTimeout(this.reconnectTimeoutId);\n      this.reconnectTimeoutId = setTimeout(function () {\n        _this.emit('reconnect');\n\n        _this.start();\n      }, this.reconnectInterval);\n    } else {\n      this.emit('destroyed');\n    }\n  };\n\n  WebSocketClient.prototype.subscribe = function (event, query, callback) {\n    this.queryParams = makeQueryParams(__assign({\n      'tm.event': event\n    }, query));\n    this.callback = callback;\n    this.start();\n  };\n\n  WebSocketClient.prototype.subscribeTx = function (query, callback) {\n    var newCallback = function newCallback(d) {\n      d.value.TxResult.txhash = hash_1.hashAmino(d.value.TxResult.tx);\n      return callback(d);\n    };\n\n    this.subscribe('Tx', query, newCallback);\n  };\n\n  return WebSocketClient;\n}(events_1.EventEmitter);\n\nexports.WebSocketClient = WebSocketClient;","map":{"version":3,"sources":["../../src/client/WebSocketClient.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketClient = void 0;\nvar events_1 = require(\"events\");\nvar ws_1 = __importDefault(require(\"ws\"));\nvar hash_1 = require(\"../util/hash\");\nvar escapeSingleQuotes = function (str) { return str.replace(/'/g, \"\\\\'\"); };\nfunction makeQueryParams(query) {\n    var queryBuilder = [];\n    for (var _i = 0, _a = Object.keys(query); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var queryItem = void 0;\n        var value = query[key];\n        // if value is scalar\n        if (!Array.isArray(value)) {\n            switch (typeof value) {\n                case 'number':\n                    queryItem = key + \"=\" + value;\n                    break;\n                case 'string':\n                    queryItem = key + \"='\" + escapeSingleQuotes(value) + \"'\";\n                    break;\n                default:\n                    // Date\n                    queryItem = key + \"=\" + value.toISOString();\n            }\n        }\n        else {\n            switch (value[0]) {\n                case '>':\n                case '<':\n                case '<=':\n                case '>=':\n                    if (typeof value[1] !== 'number') {\n                        queryItem = \"\" + key + value[0] + value[1].toISOString();\n                    }\n                    else {\n                        queryItem = \"\" + key + value[0] + value[1];\n                    }\n                    break;\n                case 'CONTAINS':\n                    queryItem = key + \" CONTAINS '\" + escapeSingleQuotes(value[1]) + \"'\";\n                    break;\n                case 'EXISTS':\n                    queryItem = key + \" EXISTS\";\n                    break;\n            }\n        }\n        queryBuilder.push(queryItem);\n    }\n    return queryBuilder.join(' AND ');\n}\n/**\n * An object repesenting a connection to a Terra node's WebSocket RPC endpoint.\n * This allows for subscribing to Tendermint events through WebSocket.\n *\n * ### Events\n * **error** emitted when error raises\n * **connect** emitted after connection establishment\n * **reconnect** emitted upon every attempt of reconnection\n * **destroyed** emitted when socket has been destroyed\n *\n * ### Example\n *\n * ```ts\n * import { WebSocketClient } from '@terra-money/terra.js';\n *\n * const wsclient = new WebSocketClient(\"ws://localhost:26657/websocket\");\n *\n * wsclient.subscribe('NewBlock', {}, (data) => {\n *    console.log(data.value);\n *\n *    // close after receiving one block.\n *    wsclient.destroy();\n * })\n *\n * wsclient.subscribe(\n * 'Tx',\n *  {\n *    'message.action': 'send',\n *    'message.sender': ['CONTAINS', 'terra1...'],\n *  },\n *  (data) => {\n *    console.log(data.value);\n *\n *   // close after receiving one send Tx\n *   wsclient.destroy();\n * });\n *\n * ```\n */\nvar WebSocketClient = /** @class */ (function (_super) {\n    __extends(WebSocketClient, _super);\n    /**\n     * WebSocketClient constructor\n     * @param URL The WebSocket endpoint URL on the Tendermint RPC server.\n     *            Ex: ws://localhost:26657/websocket\n     * @param reconnectCount 0 for not to attempt reconnect, -1 for infinite, > 0 for number of times to attempt\n     * @param reconnectInterval retry interval in milliseconds\n     */\n    function WebSocketClient(URL, reconnectCount, reconnectInterval) {\n        if (reconnectCount === void 0) { reconnectCount = 0; }\n        if (reconnectInterval === void 0) { reconnectInterval = 1000; }\n        var _this = _super.call(this) || this;\n        _this.URL = URL;\n        _this.reconnectCount = reconnectCount;\n        _this.reconnectInterval = reconnectInterval;\n        _this._reconnectCount = _this.reconnectCount;\n        _this.isConnected = false;\n        _this.shouldAttemptReconnect = !!_this.reconnectInterval;\n        return _this;\n    }\n    /**\n     * Destroys class as well as socket\n     */\n    WebSocketClient.prototype.destroy = function () {\n        this.shouldAttemptReconnect = false;\n        this.reconnectTimeoutId && clearTimeout(this.reconnectTimeoutId);\n        this.socket && this.socket.close();\n    };\n    WebSocketClient.prototype.start = function () {\n        this.socket = new ws_1.default(this.URL);\n        this.socket.onopen = this.onOpen.bind(this);\n        this.socket.onmessage = this.onMessage.bind(this);\n        this.socket.onclose = this.onClose.bind(this);\n        this.socket.onerror = function () { return undefined; };\n    };\n    WebSocketClient.prototype.onOpen = function () {\n        this.isConnected = true;\n        this.emit('connect');\n        // reset reconnectCount after connection establishment\n        this._reconnectCount = this.reconnectCount;\n        this.socket.send(JSON.stringify({\n            jsonrpc: '2.0',\n            method: 'subscribe',\n            params: [this.queryParams],\n            id: 1,\n        }));\n    };\n    WebSocketClient.prototype.onMessage = function (message) {\n        try {\n            var parsedData = JSON.parse(message.data.toString());\n            if (this.callback &&\n                parsedData.result &&\n                parsedData.result.query === this.queryParams) {\n                // this.emit('message', parsedData.result.data);\n                this.callback(parsedData.result.data);\n            }\n        }\n        catch (err) {\n            this.emit('error', err);\n        }\n    };\n    WebSocketClient.prototype.onClose = function () {\n        var _this = this;\n        this.isConnected = false;\n        if (this.shouldAttemptReconnect &&\n            (this._reconnectCount > 0 || this._reconnectCount === -1)) {\n            if (this._reconnectCount !== -1) {\n                this._reconnectCount--;\n            }\n            this.reconnectTimeoutId && clearTimeout(this.reconnectTimeoutId);\n            this.reconnectTimeoutId = setTimeout(function () {\n                _this.emit('reconnect');\n                _this.start();\n            }, this.reconnectInterval);\n        }\n        else {\n            this.emit('destroyed');\n        }\n    };\n    WebSocketClient.prototype.subscribe = function (event, query, callback) {\n        this.queryParams = makeQueryParams(__assign({ 'tm.event': event }, query));\n        this.callback = callback;\n        this.start();\n    };\n    WebSocketClient.prototype.subscribeTx = function (query, callback) {\n        var newCallback = function (d) {\n            d.value.TxResult.txhash = hash_1.hashAmino(d.value.TxResult.tx);\n            return callback(d);\n        };\n        this.subscribe('Tx', query, newCallback);\n    };\n    return WebSocketClient;\n}(events_1.EventEmitter));\nexports.WebSocketClient = WebSocketClient;\n//# sourceMappingURL=WebSocketClient.js.map"]},"metadata":{},"sourceType":"script"}