{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgUnjail = void 0;\n\nvar json_1 = require(\"../../../util/json\");\n/**\n * A validator can be jailed by the blockchain if misbehavior is detected, such as\n * double-signing or having missed too many vote periods in the Oracle ballot.\n *\n * This is done to protect delegators' funds from getting slashed further, until the\n * validator's issues have been addressed. A jailed validator cannot participate in\n * block rewards, and must be manually unjailed by submitting this message.\n */\n\n\nvar MsgUnjail =\n/** @class */\nfunction (_super) {\n  __extends(MsgUnjail, _super);\n  /**\n   * @param address validator's operator address\n   */\n\n\n  function MsgUnjail(address) {\n    var _this = _super.call(this) || this;\n\n    _this.address = address;\n    return _this;\n  }\n\n  MsgUnjail.fromData = function (data) {\n    var address = data.value.address;\n    return new MsgUnjail(address);\n  };\n\n  MsgUnjail.prototype.toData = function () {\n    var address = this.address;\n    return {\n      type: 'slashing/MsgUnjail',\n      value: {\n        address: address\n      }\n    };\n  };\n\n  return MsgUnjail;\n}(json_1.JSONSerializable);\n\nexports.MsgUnjail = MsgUnjail;","map":{"version":3,"sources":["../../../../src/core/slashing/msgs/MsgUnjail.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;AAGA;;;;;;;AAOG;;;AACH,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;AAC7B;;AAEG;;;AACH,WAAA,SAAA,CAAmB,OAAnB,EAAsC;AAAtC,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADT;;AAAmB,IAAA,KAAA,CAAA,OAAA,GAAA,OAAA;;AAElB;;AAEa,EAAA,SAAA,CAAA,QAAA,GAAd,UAAuB,IAAvB,EAA2C;AAE9B,QAAA,OAAO,GACd,IAAI,CAAA,KAAJ,CADc,OAAP;AAEX,WAAO,IAAI,SAAJ,CAAc,OAAd,CAAP;AACD,GALa;;AAOP,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACU,QAAA,OAAO,GAAK,KAAL,OAAP;AACR,WAAO;AACL,MAAA,IAAI,EAAE,oBADD;AAEL,MAAA,KAAK,EAAE;AACL,QAAA,OAAO,EAAA;AADF;AAFF,KAAP;AAMD,GARM;;AAST,SAAA,SAAA;AAAC,CAxBD,CAA+B,MAAA,CAAA,gBAA/B,CAAA;;AAAa,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgUnjail = void 0;\nvar json_1 = require(\"../../../util/json\");\n/**\n * A validator can be jailed by the blockchain if misbehavior is detected, such as\n * double-signing or having missed too many vote periods in the Oracle ballot.\n *\n * This is done to protect delegators' funds from getting slashed further, until the\n * validator's issues have been addressed. A jailed validator cannot participate in\n * block rewards, and must be manually unjailed by submitting this message.\n */\nvar MsgUnjail = /** @class */ (function (_super) {\n    __extends(MsgUnjail, _super);\n    /**\n     * @param address validator's operator address\n     */\n    function MsgUnjail(address) {\n        var _this = _super.call(this) || this;\n        _this.address = address;\n        return _this;\n    }\n    MsgUnjail.fromData = function (data) {\n        var address = data.value.address;\n        return new MsgUnjail(address);\n    };\n    MsgUnjail.prototype.toData = function () {\n        var address = this.address;\n        return {\n            type: 'slashing/MsgUnjail',\n            value: {\n                address: address,\n            },\n        };\n    };\n    return MsgUnjail;\n}(json_1.JSONSerializable));\nexports.MsgUnjail = MsgUnjail;\n//# sourceMappingURL=MsgUnjail.js.map"]},"metadata":{},"sourceType":"script"}