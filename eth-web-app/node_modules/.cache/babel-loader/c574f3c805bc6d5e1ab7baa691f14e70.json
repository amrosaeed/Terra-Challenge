{"ast":null,"code":"import{useEffect}from\"react\";import{useLocation,useHistory}from\"react-router-dom\";var useHash=function useHash(initial){var location=useLocation();var hash=decode(location.hash);var history=useHistory();var replace=history.replace;/* redirect */useEffect(function(){!hash&&initial&&replace(encode(initial));},[hash,replace,initial]);return{hash:hash};};export default useHash;/* helpers */var encode=function encode(hash){return\"#\"+encodeURIComponent(hash);};var decode=function decode(hash){return decodeURIComponent(hash.replace(\"#\",\"\"))||undefined;};","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/libs/useHash.ts"],"names":["useEffect","useLocation","useHistory","useHash","initial","location","hash","decode","history","replace","encode","encodeURIComponent","decodeURIComponent","undefined"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,WAAT,CAAsBC,UAAtB,KAAwC,kBAAxC,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAmBC,OAAnB,CAAmC,CACjD,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CACA,GAAMK,CAAAA,IAAI,CAAGC,MAAM,CAACF,QAAQ,CAACC,IAAV,CAAnB,CACA,GAAME,CAAAA,OAAO,CAAGN,UAAU,EAA1B,CAHiD,GAIzCO,CAAAA,OAJyC,CAI7BD,OAJ6B,CAIzCC,OAJyC,CAMjD,cACAT,SAAS,CAAC,UAAM,CACd,CAACM,IAAD,EAASF,OAAT,EAAoBK,OAAO,CAACC,MAAM,CAACN,OAAD,CAAP,CAA3B,CACD,CAFQ,CAEN,CAACE,IAAD,CAAOG,OAAP,CAAgBL,OAAhB,CAFM,CAAT,CAIA,MAAO,CAAEE,IAAI,CAAJA,IAAF,CAAP,CACD,CAZD,CAcA,cAAeH,CAAAA,OAAf,CAEA,aACA,GAAMO,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACJ,IAAD,QAAkB,IAAMK,kBAAkB,CAACL,IAAD,CAA1C,EAAf,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACD,IAAD,QACbM,CAAAA,kBAAkB,CAACN,IAAI,CAACG,OAAL,CAAa,GAAb,CAAkB,EAAlB,CAAD,CAAlB,EAA6CI,SADhC,EAAf","sourcesContent":["import { useEffect } from \"react\"\nimport { useLocation, useHistory } from \"react-router-dom\"\n\nconst useHash = <T extends string>(initial?: T) => {\n  const location = useLocation()\n  const hash = decode(location.hash) as T\n  const history = useHistory()\n  const { replace } = history\n\n  /* redirect */\n  useEffect(() => {\n    !hash && initial && replace(encode(initial))\n  }, [hash, replace, initial])\n\n  return { hash }\n}\n\nexport default useHash\n\n/* helpers */\nconst encode = (hash: string) => \"#\" + encodeURIComponent(hash)\nconst decode = (hash: string) =>\n  decodeURIComponent(hash.replace(\"#\", \"\")) || undefined\n"]},"metadata":{},"sourceType":"module"}