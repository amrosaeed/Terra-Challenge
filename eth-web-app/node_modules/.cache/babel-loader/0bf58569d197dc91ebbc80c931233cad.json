{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AggregateExchangeRateVote = void 0;\n\nvar json_1 = require(\"../../util/json\");\n\nvar Coin_1 = require(\"../Coin\");\n\nvar Coins_1 = require(\"../Coins\");\n/**\n * Stores information about data about Oracle aggregate vote fetched from the blockchain.\n */\n\n\nvar AggregateExchangeRateVote =\n/** @class */\nfunction (_super) {\n  __extends(AggregateExchangeRateVote, _super);\n  /**\n   * @param exchange_rate_tuples exchange rates for LUNA\n   * @param voter validator\n   */\n\n\n  function AggregateExchangeRateVote(exchange_rate_tuples, voter) {\n    var _this = _super.call(this) || this;\n\n    _this.exchange_rate_tuples = exchange_rate_tuples;\n    _this.voter = voter;\n    return _this;\n  }\n\n  AggregateExchangeRateVote.fromData = function (data) {\n    var exchange_rate_tuples = data.exchange_rate_tuples,\n        voter = data.voter;\n    var xr_coins = new Coins_1.Coins(exchange_rate_tuples.map(function (t) {\n      return new Coin_1.Coin(t.denom, t.exchange_rate);\n    })).toDecCoins();\n    return new AggregateExchangeRateVote(xr_coins, voter);\n  };\n\n  AggregateExchangeRateVote.prototype.toData = function () {\n    var _a = this,\n        exchange_rate_tuples = _a.exchange_rate_tuples,\n        voter = _a.voter;\n\n    return {\n      exchange_rate_tuples: exchange_rate_tuples.map(function (c) {\n        return {\n          denom: c.denom,\n          exchange_rate: c.amount.toString()\n        };\n      }),\n      voter: voter\n    };\n  };\n\n  return AggregateExchangeRateVote;\n}(json_1.JSONSerializable);\n\nexports.AggregateExchangeRateVote = AggregateExchangeRateVote;","map":{"version":3,"sources":["../../../src/core/oracle/AggregateExchangeRateVote.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAEA;;AAEG;;;AACH,IAAA,yBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+C,EAAA,SAAA,CAAA,yBAAA,EAAA,MAAA,CAAA;AAG7C;;;AAGG;;;AACH,WAAA,yBAAA,CAAmB,oBAAnB,EAAuD,KAAvD,EAAwE;AAAxE,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADT;;AAAmB,IAAA,KAAA,CAAA,oBAAA,GAAA,oBAAA;AAAoC,IAAA,KAAA,CAAA,KAAA,GAAA,KAAA;;AAEtD;;AAEa,EAAA,yBAAA,CAAA,QAAA,GAAd,UACE,IADF,EACsC;AAE5B,QAAA,oBAAoB,GAAY,IAAI,CAAhB,oBAApB;AAAA,QAAsB,KAAK,GAAK,IAAI,CAAT,KAA3B;AACR,QAAM,QAAQ,GAAG,IAAI,OAAA,CAAA,KAAJ,CACf,oBAAoB,CAAC,GAArB,CAAyB,UAAA,CAAA,EAAC;AAAI,aAAA,IAAI,MAAA,CAAA,IAAJ,CAAS,CAAC,CAAC,KAAX,EAAkB,CAAC,CAAnB,aAAA,CAAA;AAAkC,KAAhE,CADe,EAEf,UAFe,EAAjB;AAGA,WAAO,IAAI,yBAAJ,CAA8B,QAA9B,EAAwC,KAAxC,CAAP;AACD,GARa;;AAUP,EAAA,yBAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAkC,IAAlC;AAAA,QAAE,oBAAoB,GAAA,EAAA,CAAA,oBAAtB;AAAA,QAAwB,KAAK,GAAA,EAAA,CAAA,KAA7B;;AACN,WAAO;AACL,MAAA,oBAAoB,EAAE,oBAAoB,CAAC,GAArB,CAAyB,UAAA,CAAA,EAAC;AAAI,eAAC;AACnD,UAAA,KAAK,EAAE,CAAC,CAAC,KAD0C;AAEnD,UAAA,aAAa,EAAE,CAAC,CAAC,MAAF,CAAS,QAAT;AAFoC,SAAD;AAGlD,OAHoB,CADjB;AAKL,MAAA,KAAK,EAAA;AALA,KAAP;AAOD,GATM;;AAUT,SAAA,yBAAA;AAAC,CA/BD,CAA+C,MAAA,CAAA,gBAA/C,CAAA;;AAAa,OAAA,CAAA,yBAAA,GAAA,yBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AggregateExchangeRateVote = void 0;\nvar json_1 = require(\"../../util/json\");\nvar Coin_1 = require(\"../Coin\");\nvar Coins_1 = require(\"../Coins\");\n/**\n * Stores information about data about Oracle aggregate vote fetched from the blockchain.\n */\nvar AggregateExchangeRateVote = /** @class */ (function (_super) {\n    __extends(AggregateExchangeRateVote, _super);\n    /**\n     * @param exchange_rate_tuples exchange rates for LUNA\n     * @param voter validator\n     */\n    function AggregateExchangeRateVote(exchange_rate_tuples, voter) {\n        var _this = _super.call(this) || this;\n        _this.exchange_rate_tuples = exchange_rate_tuples;\n        _this.voter = voter;\n        return _this;\n    }\n    AggregateExchangeRateVote.fromData = function (data) {\n        var exchange_rate_tuples = data.exchange_rate_tuples, voter = data.voter;\n        var xr_coins = new Coins_1.Coins(exchange_rate_tuples.map(function (t) { return new Coin_1.Coin(t.denom, t.exchange_rate); })).toDecCoins();\n        return new AggregateExchangeRateVote(xr_coins, voter);\n    };\n    AggregateExchangeRateVote.prototype.toData = function () {\n        var _a = this, exchange_rate_tuples = _a.exchange_rate_tuples, voter = _a.voter;\n        return {\n            exchange_rate_tuples: exchange_rate_tuples.map(function (c) { return ({\n                denom: c.denom,\n                exchange_rate: c.amount.toString(),\n            }); }),\n            voter: voter,\n        };\n    };\n    return AggregateExchangeRateVote;\n}(json_1.JSONSerializable));\nexports.AggregateExchangeRateVote = AggregateExchangeRateVote;\n//# sourceMappingURL=AggregateExchangeRateVote.js.map"]},"metadata":{},"sourceType":"script"}