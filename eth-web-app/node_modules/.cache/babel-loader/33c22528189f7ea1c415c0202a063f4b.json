{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LCDClient = void 0;\n\nvar APIRequester_1 = require(\"./APIRequester\");\n\nvar api_1 = require(\"./api\");\n\nvar Wallet_1 = require(\"./Wallet\");\n\nvar DEFAULT_LCD_OPTIONS = {\n  gasAdjustment: 1.4\n};\nvar DEFAULT_GAS_PRICES_BY_CHAIN_ID = {\n  default: {\n    uluna: 0.00506\n  },\n  'columbus-3': {\n    uluna: 0.015\n  },\n  'tequila-0004': {\n    uluna: 0.15\n  }\n};\n/**\n * An object repesenting a connection to a terrad node running the Lite Client Daemon (LCD)\n * server, a REST server providing access to a node.\n *\n * ### Example\n *\n * ```ts\n * import { LCDClient, Coin } from 'terra.js';\n *\n * const terra = new LCDClient({\n *    URL: \"https://lcd.terra.dev\",\n *    chainID: \"columbus-3\"\n * });\n *\n * terra.market.swapRate(new Coin('uluna', 10000), 'ukrw').then(c => console.log(c.toString()));\n * ```\n */\n\nvar LCDClient =\n/** @class */\nfunction () {\n  /**\n   * Creates a new LCD client with the specified configuration.\n   *\n   * @param config LCD configuration\n   */\n  function LCDClient(config) {\n    this.config = __assign(__assign(__assign({}, DEFAULT_LCD_OPTIONS), {\n      gasPrices: DEFAULT_GAS_PRICES_BY_CHAIN_ID[config.chainID] || DEFAULT_GAS_PRICES_BY_CHAIN_ID['default']\n    }), config);\n    this.apiRequester = new APIRequester_1.APIRequester(this.config.URL); // instantiate APIs\n\n    this.auth = new api_1.AuthAPI(this.apiRequester);\n    this.bank = new api_1.BankAPI(this.apiRequester);\n    this.distribution = new api_1.DistributionAPI(this.apiRequester);\n    this.gov = new api_1.GovAPI(this.apiRequester);\n    this.market = new api_1.MarketAPI(this.apiRequester);\n    this.msgauth = new api_1.MsgAuthAPI(this.apiRequester);\n    this.oracle = new api_1.OracleAPI(this.apiRequester);\n    this.slashing = new api_1.SlashingAPI(this.apiRequester);\n    this.staking = new api_1.StakingAPI(this.apiRequester);\n    this.supply = new api_1.SupplyAPI(this.apiRequester);\n    this.tendermint = new api_1.TendermintAPI(this.apiRequester);\n    this.treasury = new api_1.TreasuryAPI(this.apiRequester);\n    this.wasm = new api_1.WasmAPI(this.apiRequester);\n    this.tx = new api_1.TxAPI(this);\n  }\n  /** Creates a new wallet with the Key. */\n\n\n  LCDClient.prototype.wallet = function (key) {\n    return new Wallet_1.Wallet(this, key);\n  };\n\n  return LCDClient;\n}();\n\nexports.LCDClient = LCDClient;","map":{"version":3,"sources":["../../../src/client/lcd/LCDClient.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAgBA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AA0BA,IAAM,mBAAmB,GAA6B;AACpD,EAAA,aAAa,EAAE;AADqC,CAAtD;AAIA,IAAM,8BAA8B,GAAmC;AACrE,EAAA,OAAO,EAAE;AACP,IAAA,KAAK,EAAE;AADA,GAD4D;AAIrE,gBAAc;AACZ,IAAA,KAAK,EAAE;AADK,GAJuD;AAOrE,kBAAgB;AACd,IAAA,KAAK,EAAE;AADO;AAPqD,CAAvE;AAYA;;;;;;;;;;;;;;;;AAgBG;;AAEH,IAAA,SAAA;AAAA;AAAA,YAAA;AAoBE;;;;AAIG;AACH,WAAA,SAAA,CAAY,MAAZ,EAAmC;AACjC,SAAK,MAAL,GAAW,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACN,mBADM,CAAA,EACa;AACtB,MAAA,SAAS,EACP,8BAA8B,CAAC,MAAM,CAAC,OAAR,CAA9B,IACA,8BAA8B,CAAC,SAAD;AAHV,KADb,CAAA,EAKN,MALM,CAAX;AAQA,SAAK,YAAL,GAAoB,IAAI,cAAA,CAAA,YAAJ,CAAiB,KAAK,MAAL,CAAY,GAA7B,CAApB,CATiC,CAWjC;;AACA,SAAK,IAAL,GAAY,IAAI,KAAA,CAAA,OAAJ,CAAY,KAAK,YAAjB,CAAZ;AACA,SAAK,IAAL,GAAY,IAAI,KAAA,CAAA,OAAJ,CAAY,KAAK,YAAjB,CAAZ;AACA,SAAK,YAAL,GAAoB,IAAI,KAAA,CAAA,eAAJ,CAAoB,KAAK,YAAzB,CAApB;AACA,SAAK,GAAL,GAAW,IAAI,KAAA,CAAA,MAAJ,CAAW,KAAK,YAAhB,CAAX;AACA,SAAK,MAAL,GAAc,IAAI,KAAA,CAAA,SAAJ,CAAc,KAAK,YAAnB,CAAd;AACA,SAAK,OAAL,GAAe,IAAI,KAAA,CAAA,UAAJ,CAAe,KAAK,YAApB,CAAf;AACA,SAAK,MAAL,GAAc,IAAI,KAAA,CAAA,SAAJ,CAAc,KAAK,YAAnB,CAAd;AACA,SAAK,QAAL,GAAgB,IAAI,KAAA,CAAA,WAAJ,CAAgB,KAAK,YAArB,CAAhB;AACA,SAAK,OAAL,GAAe,IAAI,KAAA,CAAA,UAAJ,CAAe,KAAK,YAApB,CAAf;AACA,SAAK,MAAL,GAAc,IAAI,KAAA,CAAA,SAAJ,CAAc,KAAK,YAAnB,CAAd;AACA,SAAK,UAAL,GAAkB,IAAI,KAAA,CAAA,aAAJ,CAAkB,KAAK,YAAvB,CAAlB;AACA,SAAK,QAAL,GAAgB,IAAI,KAAA,CAAA,WAAJ,CAAgB,KAAK,YAArB,CAAhB;AACA,SAAK,IAAL,GAAY,IAAI,KAAA,CAAA,OAAJ,CAAY,KAAK,YAAjB,CAAZ;AACA,SAAK,EAAL,GAAU,IAAI,KAAA,CAAA,KAAJ,CAAU,IAAV,CAAV;AACD;AAED;;;AACO,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,GAAd,EAAsB;AACpB,WAAO,IAAI,QAAA,CAAA,MAAJ,CAAW,IAAX,EAAiB,GAAjB,CAAP;AACD,GAFM;;AAGT,SAAA,SAAA;AAAC,CAzDD,EAAA;;AAAa,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LCDClient = void 0;\nvar APIRequester_1 = require(\"./APIRequester\");\nvar api_1 = require(\"./api\");\nvar Wallet_1 = require(\"./Wallet\");\nvar DEFAULT_LCD_OPTIONS = {\n    gasAdjustment: 1.4,\n};\nvar DEFAULT_GAS_PRICES_BY_CHAIN_ID = {\n    default: {\n        uluna: 0.00506,\n    },\n    'columbus-3': {\n        uluna: 0.015,\n    },\n    'tequila-0004': {\n        uluna: 0.15,\n    },\n};\n/**\n * An object repesenting a connection to a terrad node running the Lite Client Daemon (LCD)\n * server, a REST server providing access to a node.\n *\n * ### Example\n *\n * ```ts\n * import { LCDClient, Coin } from 'terra.js';\n *\n * const terra = new LCDClient({\n *    URL: \"https://lcd.terra.dev\",\n *    chainID: \"columbus-3\"\n * });\n *\n * terra.market.swapRate(new Coin('uluna', 10000), 'ukrw').then(c => console.log(c.toString()));\n * ```\n */\nvar LCDClient = /** @class */ (function () {\n    /**\n     * Creates a new LCD client with the specified configuration.\n     *\n     * @param config LCD configuration\n     */\n    function LCDClient(config) {\n        this.config = __assign(__assign(__assign({}, DEFAULT_LCD_OPTIONS), { gasPrices: DEFAULT_GAS_PRICES_BY_CHAIN_ID[config.chainID] ||\n                DEFAULT_GAS_PRICES_BY_CHAIN_ID['default'] }), config);\n        this.apiRequester = new APIRequester_1.APIRequester(this.config.URL);\n        // instantiate APIs\n        this.auth = new api_1.AuthAPI(this.apiRequester);\n        this.bank = new api_1.BankAPI(this.apiRequester);\n        this.distribution = new api_1.DistributionAPI(this.apiRequester);\n        this.gov = new api_1.GovAPI(this.apiRequester);\n        this.market = new api_1.MarketAPI(this.apiRequester);\n        this.msgauth = new api_1.MsgAuthAPI(this.apiRequester);\n        this.oracle = new api_1.OracleAPI(this.apiRequester);\n        this.slashing = new api_1.SlashingAPI(this.apiRequester);\n        this.staking = new api_1.StakingAPI(this.apiRequester);\n        this.supply = new api_1.SupplyAPI(this.apiRequester);\n        this.tendermint = new api_1.TendermintAPI(this.apiRequester);\n        this.treasury = new api_1.TreasuryAPI(this.apiRequester);\n        this.wasm = new api_1.WasmAPI(this.apiRequester);\n        this.tx = new api_1.TxAPI(this);\n    }\n    /** Creates a new wallet with the Key. */\n    LCDClient.prototype.wallet = function (key) {\n        return new Wallet_1.Wallet(this, key);\n    };\n    return LCDClient;\n}());\nexports.LCDClient = LCDClient;\n//# sourceMappingURL=LCDClient.js.map"]},"metadata":{},"sourceType":"script"}