{"ast":null,"code":"import _regeneratorRuntime from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{selectorFamily}from\"recoil\";import{integer}from\"./dbUtils\";import{indexState}from\"./atoms\";import{contractQuery}from\"./contract\";/* balance */export var abiQuery=selectorFamily({key:\"abi\",get:function get(params){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var get,_balance$toString,token,name,param,contract,fn,balance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:get=_ref.get;_context.prev=1;get(indexState);token=params.token,name=params.name,param=params.param;contract=get(contractQuery(token));fn=contract===null||contract===void 0?void 0:contract[name];// If param is undefined, error occurs\n_context.next=8;return param?fn===null||fn===void 0?void 0:fn(param):fn===null||fn===void 0?void 0:fn();case 8:balance=_context.sent;return _context.abrupt(\"return\",integer((_balance$toString=balance===null||balance===void 0?void 0:balance.toString())!==null&&_balance$toString!==void 0?_balance$toString:\"0\"));case 12:_context.prev=12;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",\"0\");case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,12]]);}));return function(_x){return _ref2.apply(this,arguments);};}();}});","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/database/abi.ts"],"names":["selectorFamily","integer","indexState","contractQuery","abiQuery","key","get","params","token","name","param","contract","fn","balance","toString"],"mappings":"qTAAA,OAASA,cAAT,KAA+B,QAA/B,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,UAAT,KAA2B,SAA3B,CACA,OAASC,aAAT,KAA8B,YAA9B,CAEA,aAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAGJ,cAAc,CAAC,CACrCK,GAAG,CAAE,KADgC,CAErCC,GAAG,CAAE,aAACC,MAAD,kGAAoB,sMAASD,GAAT,MAASA,GAAT,iBAErBA,GAAG,CAACJ,UAAD,CAAH,CACQM,KAHa,CAGUD,MAHV,CAGbC,KAHa,CAGNC,IAHM,CAGUF,MAHV,CAGNE,IAHM,CAGAC,KAHA,CAGUH,MAHV,CAGAG,KAHA,CAIfC,QAJe,CAIJL,GAAG,CAACH,aAAa,CAACK,KAAD,CAAd,CAJC,CAKfI,EALe,CAKVD,QALU,SAKVA,QALU,iBAKVA,QAAQ,CAAGF,IAAH,CALE,CAMrB;AANqB,sBAOEC,CAAAA,KAAK,CAAGE,EAAH,SAAGA,EAAH,iBAAGA,EAAE,CAAGF,KAAH,CAAL,CAAiBE,EAAjB,SAAiBA,EAAjB,iBAAiBA,EAAE,EAP1B,QAOfC,OAPe,+CAQdZ,OAAO,oBAACY,OAAD,SAACA,OAAD,iBAACA,OAAO,CAAEC,QAAT,EAAD,uDAAwB,GAAxB,CARO,4FAUd,GAVc,uEAApB,iEAFgC,CAAD,CAA/B","sourcesContent":["import { selectorFamily } from \"recoil\"\nimport { integer } from \"./dbUtils\"\nimport { indexState } from \"./atoms\"\nimport { contractQuery } from \"./contract\"\n\n/* balance */\ntype Params = { token: string; name: string; param?: string }\nexport const abiQuery = selectorFamily({\n  key: \"abi\",\n  get: (params: Params) => async ({ get }) => {\n    try {\n      get(indexState)\n      const { token, name, param } = params\n      const contract = get(contractQuery(token))\n      const fn = contract?.[name]\n      // If param is undefined, error occurs\n      const balance = await (param ? fn?.(param) : fn?.())\n      return integer(balance?.toString() ?? \"0\")\n    } catch {\n      return \"0\"\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}