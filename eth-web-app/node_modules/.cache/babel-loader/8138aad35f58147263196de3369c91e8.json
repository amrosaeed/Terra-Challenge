{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Coins = void 0;\n\nvar Coin_1 = require(\"./Coin\");\n\nvar json_1 = require(\"../util/json\");\n/**\n * Analagous to `sdk.Coins` and `sdk.DecCoins` from Cosmos-SDK, and represents a collection\n * of [[Coin]] objects.\n *\n */\n\n\nvar Coins =\n/** @class */\nfunction (_super) {\n  __extends(Coins, _super);\n  /**\n   * @param arg coins to input\n   */\n\n\n  function Coins(arg) {\n    if (arg === void 0) {\n      arg = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    if (arg instanceof Coins) {\n      _this._coins = __assign({}, arg._coins);\n    } else if (typeof arg === 'string') {\n      _this._coins = Coins.fromString(arg)._coins;\n    } else {\n      _this._coins = {};\n      var coins_2;\n\n      if (!Array.isArray(arg)) {\n        coins_2 = [];\n        Object.keys(arg).forEach(function (denom) {\n          return coins_2.push(new Coin_1.Coin(denom, arg[denom]));\n        });\n      } else {\n        coins_2 = arg;\n      }\n\n      for (var _i = 0, coins_1 = coins_2; _i < coins_1.length; _i++) {\n        var coin = coins_1[_i];\n        var denom = coin.denom;\n        var x = _this._coins[denom];\n\n        if (x !== undefined) {\n          _this._coins[denom] = x.add(coin);\n        } else {\n          _this._coins[denom] = coin;\n        }\n      }\n\n      if (!_this.toArray().every(function (c) {\n        return c.isDecCoin();\n      }) && !_this.toArray().every(function (c) {\n        return c.isIntCoin();\n      })) {\n        throw new Error(\"non-homogenous instantiation of Coins not supported: \" + _this.toString());\n      }\n    }\n\n    return _this;\n  }\n  /**\n   * Converts the Coins information to a comma-separated list.\n   *\n   * Eg: `15000ukrw,12000uluna`\n   */\n\n\n  Coins.prototype.toString = function () {\n    return this.toArray().map(function (c) {\n      return c.toString();\n    }).join(',');\n  };\n  /**\n   * Converts a comma-separated list of coins to a Coins object\n   *\n   * Eg. `1500ukrw,12302uluna`\n   *\n   * @param str comma-separated list of coins\n   */\n\n\n  Coins.fromString = function (str) {\n    var coin_strings = str.split(/,\\s*/);\n    var coins = coin_strings.map(function (s) {\n      return Coin_1.Coin.fromString(s);\n    });\n    return new Coins(coins);\n  };\n  /**\n   * Gets the list of denominations\n   */\n\n\n  Coins.prototype.denoms = function () {\n    return this.map(function (c) {\n      return c.denom;\n    });\n  };\n  /**\n   * Creates a new Coins object with all Decimal coins\n   */\n\n\n  Coins.prototype.toDecCoins = function () {\n    return new Coins(this.map(function (c) {\n      return c.toDecCoin();\n    }));\n  };\n  /**\n   * Creates a new Coins object with all Integer coins\n   */\n\n\n  Coins.prototype.toIntCoins = function () {\n    return new Coins(this.map(function (c) {\n      return c.toIntCoin();\n    }));\n  };\n  /**\n   * Gets the Coin for denomination if it exists in the collection.\n   * @param denom denomination to lookup\n   */\n\n\n  Coins.prototype.get = function (denom) {\n    return this._coins[denom];\n  };\n  /**\n   * Sets the Coin value for a denomination.\n   * @param denom denomination to set\n   * @param value value to set\n   */\n\n\n  Coins.prototype.set = function (denom, value) {\n    var val;\n\n    if (value instanceof Coin_1.Coin) {\n      if (value.denom != denom) {\n        throw new Error(\"Denoms must match when setting: \" + denom + \", \" + value.denom);\n      }\n\n      val = value;\n    } else {\n      val = new Coin_1.Coin(denom, value);\n    }\n\n    this._coins[denom] = val;\n  };\n\n  Coins.fromData = function (data) {\n    return new Coins(data.map(Coin_1.Coin.fromData));\n  };\n  /**\n   * Gets the individual elements of the collection.\n   */\n\n\n  Coins.prototype.toArray = function () {\n    return Object.values(this._coins).sort(function (a, b) {\n      return a.denom.localeCompare(b.denom);\n    });\n  };\n\n  Coins.prototype.toData = function () {\n    return this.toArray().map(function (c) {\n      return c.toData();\n    });\n  };\n  /**\n   * Adds a value from the elements of the collection. Coins of a similar denomination\n   * will be clobbered into one value containing their sum.\n   * @param other\n   */\n\n\n  Coins.prototype.add = function (other) {\n    if (other instanceof Coin_1.Coin) {\n      return new Coins(__spreadArrays([other], Object.values(this._coins)));\n    } else {\n      return new Coins(__spreadArrays(Object.values(other._coins), Object.values(this._coins)));\n    }\n  };\n  /**\n   * Subtracts a value from the elements of the collection.\n   * @param other\n   */\n\n\n  Coins.prototype.sub = function (other) {\n    return this.add(other.mul(-1));\n  };\n  /**\n   * Multiplies the elements of the collection by a value.\n   * @param other\n   */\n\n\n  Coins.prototype.mul = function (other) {\n    return new Coins(this.map(function (c) {\n      return c.mul(other);\n    }));\n  };\n  /**\n   * Divides the elements of the collection by a value.\n   * @param other\n   */\n\n\n  Coins.prototype.div = function (other) {\n    return new Coins(this.map(function (c) {\n      return c.div(other);\n    }));\n  };\n  /**\n   * Modulos the elements of the collection with a value.\n   * @param other\n   */\n\n\n  Coins.prototype.mod = function (other) {\n    return new Coins(this.map(function (c) {\n      return c.mod(other);\n    }));\n  };\n  /**\n   * Map a value onto the elements of the Coin collection.\n   * @param fn\n   */\n\n\n  Coins.prototype.map = function (fn) {\n    return this.toArray().map(fn);\n  };\n  /**\n   * Filters out the Coin objects that don't match the predicate\n   * @param fn predicate\n   */\n\n\n  Coins.prototype.filter = function (fn) {\n    return new Coins(this.toArray().filter(fn));\n  };\n\n  return Coins;\n}(json_1.JSONSerializable);\n\nexports.Coins = Coins;","map":{"version":3,"sources":["../../src/core/Coins.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Coins = void 0;\nvar Coin_1 = require(\"./Coin\");\nvar json_1 = require(\"../util/json\");\n/**\n * Analagous to `sdk.Coins` and `sdk.DecCoins` from Cosmos-SDK, and represents a collection\n * of [[Coin]] objects.\n *\n */\nvar Coins = /** @class */ (function (_super) {\n    __extends(Coins, _super);\n    /**\n     * @param arg coins to input\n     */\n    function Coins(arg) {\n        if (arg === void 0) { arg = {}; }\n        var _this = _super.call(this) || this;\n        if (arg instanceof Coins) {\n            _this._coins = __assign({}, arg._coins);\n        }\n        else if (typeof arg === 'string') {\n            _this._coins = Coins.fromString(arg)._coins;\n        }\n        else {\n            _this._coins = {};\n            var coins_2;\n            if (!Array.isArray(arg)) {\n                coins_2 = [];\n                Object.keys(arg).forEach(function (denom) {\n                    return coins_2.push(new Coin_1.Coin(denom, arg[denom]));\n                });\n            }\n            else {\n                coins_2 = arg;\n            }\n            for (var _i = 0, coins_1 = coins_2; _i < coins_1.length; _i++) {\n                var coin = coins_1[_i];\n                var denom = coin.denom;\n                var x = _this._coins[denom];\n                if (x !== undefined) {\n                    _this._coins[denom] = x.add(coin);\n                }\n                else {\n                    _this._coins[denom] = coin;\n                }\n            }\n            if (!_this.toArray().every(function (c) { return c.isDecCoin(); }) &&\n                !_this.toArray().every(function (c) { return c.isIntCoin(); })) {\n                throw new Error(\"non-homogenous instantiation of Coins not supported: \" + _this.toString());\n            }\n        }\n        return _this;\n    }\n    /**\n     * Converts the Coins information to a comma-separated list.\n     *\n     * Eg: `15000ukrw,12000uluna`\n     */\n    Coins.prototype.toString = function () {\n        return this.toArray()\n            .map(function (c) { return c.toString(); })\n            .join(',');\n    };\n    /**\n     * Converts a comma-separated list of coins to a Coins object\n     *\n     * Eg. `1500ukrw,12302uluna`\n     *\n     * @param str comma-separated list of coins\n     */\n    Coins.fromString = function (str) {\n        var coin_strings = str.split(/,\\s*/);\n        var coins = coin_strings.map(function (s) { return Coin_1.Coin.fromString(s); });\n        return new Coins(coins);\n    };\n    /**\n     * Gets the list of denominations\n     */\n    Coins.prototype.denoms = function () {\n        return this.map(function (c) { return c.denom; });\n    };\n    /**\n     * Creates a new Coins object with all Decimal coins\n     */\n    Coins.prototype.toDecCoins = function () {\n        return new Coins(this.map(function (c) { return c.toDecCoin(); }));\n    };\n    /**\n     * Creates a new Coins object with all Integer coins\n     */\n    Coins.prototype.toIntCoins = function () {\n        return new Coins(this.map(function (c) { return c.toIntCoin(); }));\n    };\n    /**\n     * Gets the Coin for denomination if it exists in the collection.\n     * @param denom denomination to lookup\n     */\n    Coins.prototype.get = function (denom) {\n        return this._coins[denom];\n    };\n    /**\n     * Sets the Coin value for a denomination.\n     * @param denom denomination to set\n     * @param value value to set\n     */\n    Coins.prototype.set = function (denom, value) {\n        var val;\n        if (value instanceof Coin_1.Coin) {\n            if (value.denom != denom) {\n                throw new Error(\"Denoms must match when setting: \" + denom + \", \" + value.denom);\n            }\n            val = value;\n        }\n        else {\n            val = new Coin_1.Coin(denom, value);\n        }\n        this._coins[denom] = val;\n    };\n    Coins.fromData = function (data) {\n        return new Coins(data.map(Coin_1.Coin.fromData));\n    };\n    /**\n     * Gets the individual elements of the collection.\n     */\n    Coins.prototype.toArray = function () {\n        return Object.values(this._coins).sort(function (a, b) {\n            return a.denom.localeCompare(b.denom);\n        });\n    };\n    Coins.prototype.toData = function () {\n        return this.toArray().map(function (c) { return c.toData(); });\n    };\n    /**\n     * Adds a value from the elements of the collection. Coins of a similar denomination\n     * will be clobbered into one value containing their sum.\n     * @param other\n     */\n    Coins.prototype.add = function (other) {\n        if (other instanceof Coin_1.Coin) {\n            return new Coins(__spreadArrays([other], Object.values(this._coins)));\n        }\n        else {\n            return new Coins(__spreadArrays(Object.values(other._coins), Object.values(this._coins)));\n        }\n    };\n    /**\n     * Subtracts a value from the elements of the collection.\n     * @param other\n     */\n    Coins.prototype.sub = function (other) {\n        return this.add(other.mul(-1));\n    };\n    /**\n     * Multiplies the elements of the collection by a value.\n     * @param other\n     */\n    Coins.prototype.mul = function (other) {\n        return new Coins(this.map(function (c) { return c.mul(other); }));\n    };\n    /**\n     * Divides the elements of the collection by a value.\n     * @param other\n     */\n    Coins.prototype.div = function (other) {\n        return new Coins(this.map(function (c) { return c.div(other); }));\n    };\n    /**\n     * Modulos the elements of the collection with a value.\n     * @param other\n     */\n    Coins.prototype.mod = function (other) {\n        return new Coins(this.map(function (c) { return c.mod(other); }));\n    };\n    /**\n     * Map a value onto the elements of the Coin collection.\n     * @param fn\n     */\n    Coins.prototype.map = function (fn) {\n        return this.toArray().map(fn);\n    };\n    /**\n     * Filters out the Coin objects that don't match the predicate\n     * @param fn predicate\n     */\n    Coins.prototype.filter = function (fn) {\n        return new Coins(this.toArray().filter(fn));\n    };\n    return Coins;\n}(json_1.JSONSerializable));\nexports.Coins = Coins;\n//# sourceMappingURL=Coins.js.map"]},"metadata":{},"sourceType":"script"}