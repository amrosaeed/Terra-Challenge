{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StakingAPI = void 0;\n\nvar core_1 = require(\"../../../core\");\n\nvar BaseAPI_1 = require(\"./BaseAPI\");\n\nvar Delegation_1 = require(\"../../../core/staking/Delegation\");\n\nvar Validator_1 = require(\"../../../core/staking/Validator\");\n\nvar Redelegation_1 = require(\"../../../core/staking/Redelegation\");\n\nvar Denom_1 = require(\"../../../core/Denom\");\n\nvar StakingAPI =\n/** @class */\nfunction (_super) {\n  __extends(StakingAPI, _super);\n\n  function StakingAPI() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Queries all delegations, filtering by delegator, validator, or both.\n   *\n   * At least one of the parameters must be defined.\n   * @param delegator delegator's account address\n   * @param validator validator's operator address\n   */\n\n\n  StakingAPI.prototype.delegations = function (delegator, validator) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (delegator !== undefined && validator !== undefined) {\n          return [2\n          /*return*/\n          , this.c.get(\"/staking/delegators/\" + delegator + \"/delegations/\" + validator).then(function (data) {\n            return [Delegation_1.Delegation.fromData(data.result)];\n          })];\n        } else if (delegator !== undefined) {\n          return [2\n          /*return*/\n          , this.c.get(\"/staking/delegators/\" + delegator + \"/delegations\").then(function (data) {\n            return data.result.map(Delegation_1.Delegation.fromData);\n          })];\n        } else if (validator !== undefined) {\n          return [2\n          /*return*/\n          , this.c.get(\"/staking/validators/\" + validator + \"/delegations\").then(function (data) {\n            return data.result.map(Delegation_1.Delegation.fromData);\n          })];\n        } else {\n          throw new TypeError('arguments delegator and validator cannot both be empty');\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\n   * Gets the delegation between a delegator and validator, if it exists.\n   * @param delegator delegator's account address\n   * @param validator validator's operator address\n   */\n\n\n  StakingAPI.prototype.delegation = function (delegator, validator) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.delegations(delegator, validator).then(function (delgs) {\n          return delgs[0];\n        })];\n      });\n    });\n  };\n  /**\n   * Queries all unbonding delegations, filtering by delegator, validator, or both.\n   *\n   * At least one of the parameters must be defined.\n   * @param delegator delegator's account address\n   * @param validator validator's operator address\n   */\n\n\n  StakingAPI.prototype.unbondingDelegations = function (delegator, validator) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (delegator !== undefined && validator !== undefined) {\n          return [2\n          /*return*/\n          , this.c.get(\"/staking/delegators/\" + delegator + \"/unbonding_delegations/\" + validator).then(function (data) {\n            return [core_1.UnbondingDelegation.fromData(data.result)];\n          })];\n        } else if (delegator !== undefined) {\n          return [2\n          /*return*/\n          , this.c.get(\"/staking/delegators/\" + delegator + \"/unbonding_delegations\").then(function (data) {\n            return data.result.map(core_1.UnbondingDelegation.fromData);\n          })];\n        } else if (validator !== undefined) {\n          return [2\n          /*return*/\n          , this.c.get(\"/staking/validators/\" + validator + \"/unbonding_delegations\").then(function (data) {\n            return data.result.map(core_1.UnbondingDelegation.fromData);\n          })];\n        } else {\n          throw new TypeError('arguments delegator and validator cannot both be empty');\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\n   * Gets the unbonding delegation between a delegator and validator, if it exists.\n   * @param delegator delegator's account address\n   * @param validator validator's operator address\n   */\n\n\n  StakingAPI.prototype.unbondingDelegation = function (delegator, validator) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.unbondingDelegations(delegator, validator).then(function (udelgs) {\n          return udelgs[0];\n        })];\n      });\n    });\n  };\n  /**\n   * Queries all redelegations, filterable by delegator, source validator, and target validator.\n   * @param delegator delegator's account address\n   * @param validatorSrc source validator's operator address (from).\n   * @param validatorDst destination validator's operator address (to).\n   */\n\n\n  StakingAPI.prototype.redelegations = function (delegator, validatorSrc, validatorDst) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = {\n          delegator: delegator,\n          validator_from: validatorSrc,\n          validator_to: validatorDst\n        };\n        return [2\n        /*return*/\n        , this.c.get(\"/staking/redelegations\", params).then(function (d) {\n          return d.result.map(Redelegation_1.Redelegation.fromData);\n        })];\n      });\n    });\n  };\n  /**\n   * Gets all bonded validators for a delegator given its address.\n   * @param delegator delegator's account address\n   */\n\n\n  StakingAPI.prototype.bondedValidators = function (delegator) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.c.get(\"/staking/delegators/\" + delegator + \"/validators\").then(function (d) {\n          return d.result.map(Validator_1.Validator.fromData);\n        })];\n      });\n    });\n  };\n  /**\n   * Get all current registered validators, including validators that are not currently in the validating set.\n   */\n\n\n  StakingAPI.prototype.validators = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.c.get(\"/staking/validators\").then(function (d) {\n          return d.result.map(Validator_1.Validator.fromData);\n        })];\n      });\n    });\n  };\n  /**\n   * Gets the validator information for a specific validator.\n   * @param validator validator's operator address\n   */\n\n\n  StakingAPI.prototype.validator = function (validator) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.c.get(\"/staking/validators/\" + validator).then(function (d) {\n          return Validator_1.Validator.fromData(d.result);\n        })];\n      });\n    });\n  };\n  /**\n   * Gets the current staking pool.\n   */\n\n\n  StakingAPI.prototype.pool = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.c.get(\"/staking/pool\").then(function (_a) {\n          var d = _a.result;\n          return {\n            bonded_tokens: new core_1.Coin(Denom_1.Denom.LUNA, d.bonded_tokens),\n            not_bonded_tokens: new core_1.Coin(Denom_1.Denom.LUNA, d.not_bonded_tokens)\n          };\n        })];\n      });\n    });\n  };\n  /**\n   * Gets the current Staking module's parameters.\n   */\n\n\n  StakingAPI.prototype.parameters = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.c.get(\"/staking/parameters\").then(function (_a) {\n          var d = _a.result;\n          return {\n            unbonding_time: Number.parseInt(d.unbonding_time),\n            max_validators: d.max_validators,\n            max_entries: d.max_entries,\n            historical_entries: d.historical_entries,\n            bond_denom: d.bond_denom\n          };\n        })];\n      });\n    });\n  };\n\n  return StakingAPI;\n}(BaseAPI_1.BaseAPI);\n\nexports.StakingAPI = StakingAPI;","map":{"version":3,"sources":["../../../../src/client/lcd/api/StakingAPI.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StakingAPI = void 0;\nvar core_1 = require(\"../../../core\");\nvar BaseAPI_1 = require(\"./BaseAPI\");\nvar Delegation_1 = require(\"../../../core/staking/Delegation\");\nvar Validator_1 = require(\"../../../core/staking/Validator\");\nvar Redelegation_1 = require(\"../../../core/staking/Redelegation\");\nvar Denom_1 = require(\"../../../core/Denom\");\nvar StakingAPI = /** @class */ (function (_super) {\n    __extends(StakingAPI, _super);\n    function StakingAPI() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Queries all delegations, filtering by delegator, validator, or both.\n     *\n     * At least one of the parameters must be defined.\n     * @param delegator delegator's account address\n     * @param validator validator's operator address\n     */\n    StakingAPI.prototype.delegations = function (delegator, validator) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (delegator !== undefined && validator !== undefined) {\n                    return [2 /*return*/, this.c\n                            .get(\"/staking/delegators/\" + delegator + \"/delegations/\" + validator)\n                            .then(function (data) { return [Delegation_1.Delegation.fromData(data.result)]; })];\n                }\n                else if (delegator !== undefined) {\n                    return [2 /*return*/, this.c\n                            .get(\"/staking/delegators/\" + delegator + \"/delegations\")\n                            .then(function (data) { return data.result.map(Delegation_1.Delegation.fromData); })];\n                }\n                else if (validator !== undefined) {\n                    return [2 /*return*/, this.c\n                            .get(\"/staking/validators/\" + validator + \"/delegations\")\n                            .then(function (data) { return data.result.map(Delegation_1.Delegation.fromData); })];\n                }\n                else {\n                    throw new TypeError('arguments delegator and validator cannot both be empty');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Gets the delegation between a delegator and validator, if it exists.\n     * @param delegator delegator's account address\n     * @param validator validator's operator address\n     */\n    StakingAPI.prototype.delegation = function (delegator, validator) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.delegations(delegator, validator).then(function (delgs) { return delgs[0]; })];\n            });\n        });\n    };\n    /**\n     * Queries all unbonding delegations, filtering by delegator, validator, or both.\n     *\n     * At least one of the parameters must be defined.\n     * @param delegator delegator's account address\n     * @param validator validator's operator address\n     */\n    StakingAPI.prototype.unbondingDelegations = function (delegator, validator) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (delegator !== undefined && validator !== undefined) {\n                    return [2 /*return*/, this.c\n                            .get(\"/staking/delegators/\" + delegator + \"/unbonding_delegations/\" + validator)\n                            .then(function (data) { return [core_1.UnbondingDelegation.fromData(data.result)]; })];\n                }\n                else if (delegator !== undefined) {\n                    return [2 /*return*/, this.c\n                            .get(\"/staking/delegators/\" + delegator + \"/unbonding_delegations\")\n                            .then(function (data) { return data.result.map(core_1.UnbondingDelegation.fromData); })];\n                }\n                else if (validator !== undefined) {\n                    return [2 /*return*/, this.c\n                            .get(\"/staking/validators/\" + validator + \"/unbonding_delegations\")\n                            .then(function (data) { return data.result.map(core_1.UnbondingDelegation.fromData); })];\n                }\n                else {\n                    throw new TypeError('arguments delegator and validator cannot both be empty');\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Gets the unbonding delegation between a delegator and validator, if it exists.\n     * @param delegator delegator's account address\n     * @param validator validator's operator address\n     */\n    StakingAPI.prototype.unbondingDelegation = function (delegator, validator) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.unbondingDelegations(delegator, validator).then(function (udelgs) { return udelgs[0]; })];\n            });\n        });\n    };\n    /**\n     * Queries all redelegations, filterable by delegator, source validator, and target validator.\n     * @param delegator delegator's account address\n     * @param validatorSrc source validator's operator address (from).\n     * @param validatorDst destination validator's operator address (to).\n     */\n    StakingAPI.prototype.redelegations = function (delegator, validatorSrc, validatorDst) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            return __generator(this, function (_a) {\n                params = {\n                    delegator: delegator,\n                    validator_from: validatorSrc,\n                    validator_to: validatorDst,\n                };\n                return [2 /*return*/, this.c\n                        .get(\"/staking/redelegations\", params)\n                        .then(function (d) { return d.result.map(Redelegation_1.Redelegation.fromData); })];\n            });\n        });\n    };\n    /**\n     * Gets all bonded validators for a delegator given its address.\n     * @param delegator delegator's account address\n     */\n    StakingAPI.prototype.bondedValidators = function (delegator) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.c\n                        .get(\"/staking/delegators/\" + delegator + \"/validators\")\n                        .then(function (d) { return d.result.map(Validator_1.Validator.fromData); })];\n            });\n        });\n    };\n    /**\n     * Get all current registered validators, including validators that are not currently in the validating set.\n     */\n    StakingAPI.prototype.validators = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.c\n                        .get(\"/staking/validators\")\n                        .then(function (d) { return d.result.map(Validator_1.Validator.fromData); })];\n            });\n        });\n    };\n    /**\n     * Gets the validator information for a specific validator.\n     * @param validator validator's operator address\n     */\n    StakingAPI.prototype.validator = function (validator) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.c\n                        .get(\"/staking/validators/\" + validator)\n                        .then(function (d) { return Validator_1.Validator.fromData(d.result); })];\n            });\n        });\n    };\n    /**\n     * Gets the current staking pool.\n     */\n    StakingAPI.prototype.pool = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.c\n                        .get(\"/staking/pool\")\n                        .then(function (_a) {\n                        var d = _a.result;\n                        return ({\n                            bonded_tokens: new core_1.Coin(Denom_1.Denom.LUNA, d.bonded_tokens),\n                            not_bonded_tokens: new core_1.Coin(Denom_1.Denom.LUNA, d.not_bonded_tokens),\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Gets the current Staking module's parameters.\n     */\n    StakingAPI.prototype.parameters = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.c\n                        .get(\"/staking/parameters\")\n                        .then(function (_a) {\n                        var d = _a.result;\n                        return ({\n                            unbonding_time: Number.parseInt(d.unbonding_time),\n                            max_validators: d.max_validators,\n                            max_entries: d.max_entries,\n                            historical_entries: d.historical_entries,\n                            bond_denom: d.bond_denom,\n                        });\n                    })];\n            });\n        });\n    };\n    return StakingAPI;\n}(BaseAPI_1.BaseAPI));\nexports.StakingAPI = StakingAPI;\n//# sourceMappingURL=StakingAPI.js.map"]},"metadata":{},"sourceType":"script"}