{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgAggregateExchangeRateVote = exports.aggregateVoteHash = void 0;\n\nvar json_1 = require(\"../../../util/json\");\n\nvar MsgAggregateExchangeRatePrevote_1 = require(\"./MsgAggregateExchangeRatePrevote\");\n\nvar Coins_1 = require(\"../../Coins\");\n\nvar sha256_1 = __importDefault(require(\"crypto-js/sha256\"));\n/**\n * Calculates the aggregate vote hash\n * @param exchangeRates exchange rates\n * @param salt salt\n * @param validator validator operator address\n */\n\n\nfunction aggregateVoteHash(exchangeRates, salt, validator) {\n  var payload = salt + \":\" + exchangeRates.toDecCoins().toString() + \":\" + validator;\n  return sha256_1.default(payload).toString().substring(0, 40);\n}\n\nexports.aggregateVoteHash = aggregateVoteHash;\n/**\n * Aggregate analog of MsgExchangeRateVote: submits an oracle vote for multiple denominations\n * through a single message rather than multiple messages.\n */\n\nvar MsgAggregateExchangeRateVote =\n/** @class */\nfunction (_super) {\n  __extends(MsgAggregateExchangeRateVote, _super);\n  /**\n   * @param exchange_rate exchange rates\n   * @param salt salt\n   * @param feeder feeder address\n   * @param validator validator operator address\n   */\n\n\n  function MsgAggregateExchangeRateVote(exchange_rates, salt, feeder, validator) {\n    var _this = _super.call(this) || this;\n\n    _this.salt = salt;\n    _this.feeder = feeder;\n    _this.validator = validator;\n    _this.exchange_rates = new Coins_1.Coins(exchange_rates).toDecCoins();\n    return _this;\n  }\n\n  MsgAggregateExchangeRateVote.fromData = function (data) {\n    var _a = data.value,\n        exchange_rates = _a.exchange_rates,\n        salt = _a.salt,\n        feeder = _a.feeder,\n        validator = _a.validator;\n    var xrs = Coins_1.Coins.fromString(exchange_rates);\n    return new MsgAggregateExchangeRateVote(xrs, salt, feeder, validator);\n  };\n\n  MsgAggregateExchangeRateVote.prototype.toData = function () {\n    var _a = this,\n        exchange_rates = _a.exchange_rates,\n        salt = _a.salt,\n        feeder = _a.feeder,\n        validator = _a.validator;\n\n    return {\n      type: 'oracle/MsgAggregateExchangeRateVote',\n      value: {\n        exchange_rates: exchange_rates.toDecCoins().toString(),\n        salt: salt,\n        feeder: feeder,\n        validator: validator\n      }\n    };\n  };\n  /**\n   * Gets the aggregate vote hash for the MsgAggregateExchangeRateVote, for the creation of\n   *  the corresponding prevote message.\n   */\n\n\n  MsgAggregateExchangeRateVote.prototype.getAggregateVoteHash = function () {\n    return aggregateVoteHash(this.exchange_rates, this.salt, this.validator);\n  };\n  /**\n   * You can generate the corresponding aggregate prevote message.\n   * This will return a [[MsgAggregateExchangeRatePrevote]] with the proper vote hash and values,\n   * determined by the current attributes of the object.\n   *\n   * @returns the corresponding prevote message to send\n   */\n\n\n  MsgAggregateExchangeRateVote.prototype.getPrevote = function () {\n    return new MsgAggregateExchangeRatePrevote_1.MsgAggregateExchangeRatePrevote(this.getAggregateVoteHash(), this.feeder, this.validator);\n  };\n\n  return MsgAggregateExchangeRateVote;\n}(json_1.JSONSerializable);\n\nexports.MsgAggregateExchangeRateVote = MsgAggregateExchangeRateVote;","map":{"version":3,"sources":["../../../../src/core/oracle/msgs/MsgAggregateExchangeRateVote.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgAggregateExchangeRateVote = exports.aggregateVoteHash = void 0;\nvar json_1 = require(\"../../../util/json\");\nvar MsgAggregateExchangeRatePrevote_1 = require(\"./MsgAggregateExchangeRatePrevote\");\nvar Coins_1 = require(\"../../Coins\");\nvar sha256_1 = __importDefault(require(\"crypto-js/sha256\"));\n/**\n * Calculates the aggregate vote hash\n * @param exchangeRates exchange rates\n * @param salt salt\n * @param validator validator operator address\n */\nfunction aggregateVoteHash(exchangeRates, salt, validator) {\n    var payload = salt + \":\" + exchangeRates\n        .toDecCoins()\n        .toString() + \":\" + validator;\n    return sha256_1.default(payload).toString().substring(0, 40);\n}\nexports.aggregateVoteHash = aggregateVoteHash;\n/**\n * Aggregate analog of MsgExchangeRateVote: submits an oracle vote for multiple denominations\n * through a single message rather than multiple messages.\n */\nvar MsgAggregateExchangeRateVote = /** @class */ (function (_super) {\n    __extends(MsgAggregateExchangeRateVote, _super);\n    /**\n     * @param exchange_rate exchange rates\n     * @param salt salt\n     * @param feeder feeder address\n     * @param validator validator operator address\n     */\n    function MsgAggregateExchangeRateVote(exchange_rates, salt, feeder, validator) {\n        var _this = _super.call(this) || this;\n        _this.salt = salt;\n        _this.feeder = feeder;\n        _this.validator = validator;\n        _this.exchange_rates = new Coins_1.Coins(exchange_rates).toDecCoins();\n        return _this;\n    }\n    MsgAggregateExchangeRateVote.fromData = function (data) {\n        var _a = data.value, exchange_rates = _a.exchange_rates, salt = _a.salt, feeder = _a.feeder, validator = _a.validator;\n        var xrs = Coins_1.Coins.fromString(exchange_rates);\n        return new MsgAggregateExchangeRateVote(xrs, salt, feeder, validator);\n    };\n    MsgAggregateExchangeRateVote.prototype.toData = function () {\n        var _a = this, exchange_rates = _a.exchange_rates, salt = _a.salt, feeder = _a.feeder, validator = _a.validator;\n        return {\n            type: 'oracle/MsgAggregateExchangeRateVote',\n            value: {\n                exchange_rates: exchange_rates.toDecCoins().toString(),\n                salt: salt,\n                feeder: feeder,\n                validator: validator,\n            },\n        };\n    };\n    /**\n     * Gets the aggregate vote hash for the MsgAggregateExchangeRateVote, for the creation of\n     *  the corresponding prevote message.\n     */\n    MsgAggregateExchangeRateVote.prototype.getAggregateVoteHash = function () {\n        return aggregateVoteHash(this.exchange_rates, this.salt, this.validator);\n    };\n    /**\n     * You can generate the corresponding aggregate prevote message.\n     * This will return a [[MsgAggregateExchangeRatePrevote]] with the proper vote hash and values,\n     * determined by the current attributes of the object.\n     *\n     * @returns the corresponding prevote message to send\n     */\n    MsgAggregateExchangeRateVote.prototype.getPrevote = function () {\n        return new MsgAggregateExchangeRatePrevote_1.MsgAggregateExchangeRatePrevote(this.getAggregateVoteHash(), this.feeder, this.validator);\n    };\n    return MsgAggregateExchangeRateVote;\n}(json_1.JSONSerializable));\nexports.MsgAggregateExchangeRateVote = MsgAggregateExchangeRateVote;\n//# sourceMappingURL=MsgAggregateExchangeRateVote.js.map"]},"metadata":{},"sourceType":"script"}