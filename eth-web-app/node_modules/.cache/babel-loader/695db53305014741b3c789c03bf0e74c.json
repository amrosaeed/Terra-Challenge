{"ast":null,"code":"import _objectSpread from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{jsx as _jsx}from\"react/jsx-runtime\";import{useRecoilValue}from\"recoil\";import{gt}from\"../libs/math\";import{formatAsset}from\"../libs/parse\";import{useContract}from\"../database/contract\";import{airdropTokenQuery}from\"../database/airdrop\";import{useQueryAirdrop}from\"../hooks\";import FormContainer from\"./FormContainer\";var Airdrop=function Airdrop(){var _airdrop$amount;/* context */var airdrop=useQueryAirdrop();var airdropToken=useRecoilValue(airdropTokenQuery);var amount=(_airdrop$amount=airdrop===null||airdrop===void 0?void 0:airdrop.amount)!==null&&_airdrop$amount!==void 0?_airdrop$amount:\"0\";/* confirm */var contents=[{title:\"Amount\",content:formatAsset(amount,\"MIR\")}];/* submit */var contract=useContract(airdropToken);var tx=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(signer){var withSigner,_ref2,stage,address,proof,_yield$withSigner$cla,hash;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:withSigner=contract.connect(signer);_ref2=airdrop,stage=_ref2.stage,address=_ref2.address,proof=_ref2.proof;_context.next=4;return withSigner.claim(String(stage),address,amount,JSON.parse(proof));case 4:_yield$withSigner$cla=_context.sent;hash=_yield$withSigner$cla.hash;return _context.abrupt(\"return\",hash);case 7:case\"end\":return _context.stop();}}},_callee);}));return function tx(_x){return _ref.apply(this,arguments);};}();var tab={tabs:[\"Claim\"],current:\"Claim\"};var disabled=!gt(amount,0);var container={tab:tab,contents:contents,disabled:disabled,tx:tx};return/*#__PURE__*/_jsx(FormContainer,_objectSpread({},container));};export default Airdrop;","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/forms/AirdropForm.tsx"],"names":["useRecoilValue","gt","formatAsset","useContract","airdropTokenQuery","useQueryAirdrop","FormContainer","Airdrop","airdrop","airdropToken","amount","contents","title","content","contract","tx","signer","withSigner","connect","stage","address","proof","claim","String","JSON","parse","hash","tab","tabs","current","disabled","container"],"mappings":"2fAAA,OAASA,cAAT,KAA+B,QAA/B,CAGA,OAASC,EAAT,KAAmB,cAAnB,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,WAAT,KAA4B,sBAA5B,CACA,OAASC,iBAAT,KAAkC,qBAAlC,CACA,OAASC,eAAT,KAAgC,UAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,qBACpB,aACA,GAAMC,CAAAA,OAAO,CAAGH,eAAe,EAA/B,CACA,GAAMI,CAAAA,YAAY,CAAGT,cAAc,CAACI,iBAAD,CAAnC,CACA,GAAMM,CAAAA,MAAM,kBAAGF,OAAH,SAAGA,OAAH,iBAAGA,OAAO,CAAEE,MAAZ,mDAAsB,GAAlC,CAEA,aACA,GAAMC,CAAAA,QAAQ,CAAG,CAAC,CAAEC,KAAK,CAAE,QAAT,CAAmBC,OAAO,CAAEX,WAAW,CAACQ,MAAD,CAAS,KAAT,CAAvC,CAAD,CAAjB,CAEA,YACA,GAAMI,CAAAA,QAAQ,CAAGX,WAAW,CAACM,YAAD,CAA5B,CACA,GAAMM,CAAAA,EAAE,0FAAG,iBAAOC,MAAP,sLACHC,UADG,CACUH,QAAQ,CAAEI,OAAV,CAAkBF,MAAlB,CADV,OAEyBR,OAFzB,CAEDW,KAFC,OAEDA,KAFC,CAEMC,OAFN,OAEMA,OAFN,CAEeC,KAFf,OAEeA,KAFf,uBAIcJ,CAAAA,UAAU,CAACK,KAAX,CACrBC,MAAM,CAACJ,KAAD,CADe,CAErBC,OAFqB,CAGrBV,MAHqB,CAIrBc,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAJqB,CAJd,4CAIDK,IAJC,uBAIDA,IAJC,iCAWFA,IAXE,wDAAH,kBAAFX,CAAAA,EAAE,4CAAR,CAcA,GAAMY,CAAAA,GAAG,CAAG,CAAEC,IAAI,CAAE,CAAC,OAAD,CAAR,CAAmBC,OAAO,CAAE,OAA5B,CAAZ,CACA,GAAMC,CAAAA,QAAQ,CAAG,CAAC7B,EAAE,CAACS,MAAD,CAAS,CAAT,CAApB,CACA,GAAMqB,CAAAA,SAAS,CAAG,CAAEJ,GAAG,CAAHA,GAAF,CAAOhB,QAAQ,CAARA,QAAP,CAAiBmB,QAAQ,CAARA,QAAjB,CAA2Bf,EAAE,CAAFA,EAA3B,CAAlB,CAEA,mBAAO,KAAC,aAAD,kBAAmBgB,SAAnB,EAAP,CACD,CA9BD,CAgCA,cAAexB,CAAAA,OAAf","sourcesContent":["import { useRecoilValue } from \"recoil\"\nimport { ethers } from \"ethers\"\n\nimport { gt } from \"../libs/math\"\nimport { formatAsset } from \"../libs/parse\"\nimport { useContract } from \"../database/contract\"\nimport { airdropTokenQuery } from \"../database/airdrop\"\nimport { useQueryAirdrop } from \"../hooks\"\nimport FormContainer from \"./FormContainer\"\n\nconst Airdrop = () => {\n  /* context */\n  const airdrop = useQueryAirdrop()\n  const airdropToken = useRecoilValue(airdropTokenQuery)\n  const amount = airdrop?.amount ?? \"0\"\n\n  /* confirm */\n  const contents = [{ title: \"Amount\", content: formatAsset(amount, \"MIR\") }]\n\n  /* submit */\n  const contract = useContract(airdropToken)\n  const tx = async (signer: ethers.providers.JsonRpcSigner) => {\n    const withSigner = contract!.connect(signer)\n    const { stage, address, proof } = airdrop!\n\n    const { hash } = await withSigner.claim(\n      String(stage),\n      address,\n      amount,\n      JSON.parse(proof)\n    )\n\n    return hash\n  }\n\n  const tab = { tabs: [\"Claim\"], current: \"Claim\" }\n  const disabled = !gt(amount, 0)\n  const container = { tab, contents, disabled, tx }\n\n  return <FormContainer {...container} />\n}\n\nexport default Airdrop\n"]},"metadata":{},"sourceType":"module"}