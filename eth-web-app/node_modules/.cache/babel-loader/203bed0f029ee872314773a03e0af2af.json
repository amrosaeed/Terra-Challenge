{"ast":null,"code":"import BN from\"bignumber.js\";import{isNil}from\"ramda\";export var plus=function plus(a,b){return new BN(a||0).plus(b||0).toString();};export var minus=function minus(a,b){return new BN(a||0).minus(b||0).toString();};export var times=function times(a,b){return new BN(a||0).times(b||0).toString();};export var div=function div(a,b){return new BN(a||0).div(b||1).toString();};export var pow=function pow(a,b){return new BN(a).pow(b).toString();};export var sum=function sum(array){return array.length?BN.sum.apply(null,array.filter(isFinite)).toString():\"0\";};export var min=function min(array){return BN.min.apply(null,array.filter(isFinite)).toString();};export var max=function max(array){return BN.max.apply(null,array.filter(isFinite)).toString();};export var ceil=function ceil(n){return new BN(n).integerValue(BN.ROUND_CEIL).toString();};export var floor=function floor(n){return new BN(n).integerValue(BN.ROUND_FLOOR).toString();};export var abs=function abs(n){return new BN(n).abs().toString();};/* format */export var number=function number(n){return new BN(n).toNumber();};/* boolean */export var gt=function gt(a,b){return new BN(a).gt(b);};export var lt=function lt(a,b){return new BN(a).lt(b);};export var gte=function gte(a,b){return new BN(a).gte(b);};export var lte=function lte(a,b){return new BN(a).lte(b);};export var isFinite=function isFinite(n){return!isNil(n)&&new BN(n).isFinite();};export var isInteger=function isInteger(n){return!isNil(n)&&new BN(n).isInteger();};","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/libs/math.ts"],"names":["BN","isNil","plus","a","b","toString","minus","times","div","pow","sum","array","length","apply","filter","isFinite","min","max","ceil","n","integerValue","ROUND_CEIL","floor","ROUND_FLOOR","abs","number","toNumber","gt","lt","gte","lte","isInteger"],"mappings":"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","sourcesContent":["import BN from \"bignumber.js\"\nimport { isNil } from \"ramda\"\n\nexport const plus = (a?: BN.Value, b?: BN.Value): string =>\n  new BN(a || 0).plus(b || 0).toString()\n\nexport const minus = (a?: BN.Value, b?: BN.Value): string =>\n  new BN(a || 0).minus(b || 0).toString()\n\nexport const times = (a?: BN.Value, b?: BN.Value): string =>\n  new BN(a || 0).times(b || 0).toString()\n\nexport const div = (a?: BN.Value, b?: BN.Value): string =>\n  new BN(a || 0).div(b || 1).toString()\n\nexport const pow = (a: BN.Value, b: BN.Value): string =>\n  new BN(a).pow(b).toString()\n\nexport const sum = (array: BN.Value[]): string =>\n  array.length ? BN.sum.apply(null, array.filter(isFinite)).toString() : \"0\"\n\nexport const min = (array: BN.Value[]): string =>\n  BN.min.apply(null, array.filter(isFinite)).toString()\n\nexport const max = (array: BN.Value[]): string =>\n  BN.max.apply(null, array.filter(isFinite)).toString()\n\nexport const ceil = (n: BN.Value): string =>\n  new BN(n).integerValue(BN.ROUND_CEIL).toString()\n\nexport const floor = (n: BN.Value): string =>\n  new BN(n).integerValue(BN.ROUND_FLOOR).toString()\n\nexport const abs = (n: BN.Value): string => new BN(n).abs().toString()\n\n/* format */\nexport const number = (n: BN.Value): number => new BN(n).toNumber()\n\n/* boolean */\nexport const gt = (a: BN.Value, b: BN.Value): boolean => new BN(a).gt(b)\nexport const lt = (a: BN.Value, b: BN.Value): boolean => new BN(a).lt(b)\nexport const gte = (a: BN.Value, b: BN.Value): boolean => new BN(a).gte(b)\nexport const lte = (a: BN.Value, b: BN.Value): boolean => new BN(a).lte(b)\n\nexport const isFinite = (n?: BN.Value): boolean =>\n  !isNil(n) && new BN(n).isFinite()\n\nexport const isInteger = (n?: BN.Value): boolean =>\n  !isNil(n) && new BN(n).isInteger()\n"]},"metadata":{},"sourceType":"module"}