{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Key = void 0;\n\nvar bech32 = __importStar(require(\"bech32\"));\n\nvar HEX = __importStar(require(\"crypto-js/enc-hex\"));\n\nvar ripemd160_1 = __importDefault(require(\"crypto-js/ripemd160\"));\n\nvar sha256_1 = __importDefault(require(\"crypto-js/sha256\"));\n\nvar core_1 = require(\"../core\");\n\nvar core_2 = require(\"../core\");\n\nvar BECH32_PUBKEY_DATA_PREFIX = 'eb5ae98721';\n/**\n * Gets a raw address from a compressed bytes public key.\n *\n * @param publicKey raw public key\n */\n\nfunction addressFromPublicKey(publicKey) {\n  if (typeof publicKey !== 'object' || !(publicKey instanceof Buffer)) {\n    throw new TypeError('parameter must be Buffer that contains public key');\n  }\n\n  var message = HEX.parse(publicKey.toString('hex'));\n  var hash = ripemd160_1.default(sha256_1.default(message)).toString();\n  var address = Buffer.from(hash, 'hex');\n  return Buffer.from(bech32.toWords(address));\n}\n/**\n * Gets a bech32-words pubkey from a compressed bytes public key.\n *\n * @param publicKey raw public key\n */\n\n\nfunction pubKeyFromPublicKey(publicKey) {\n  var buffer = Buffer.from(BECH32_PUBKEY_DATA_PREFIX, 'hex');\n  var combined = Buffer.concat([buffer, publicKey]);\n  return Buffer.from(bech32.toWords(combined));\n}\n/**\n * Abstract key interface that provides transaction signing features and Bech32 address\n * and public key derivation from a public key. This allows you to create custom key\n * solutions, such as for various hardware wallets, by implementing signing and calling\n * `super` with the raw public key from within your subclass. See [[MnemonicKey]] for\n * an implementation of a basic mnemonic-based key.\n */\n\n\nvar Key =\n/** @class */\nfunction () {\n  /**\n   * Called to derive the relevant account and validator addresses and public keys from\n   * the raw compressed public key in bytes.\n   *\n   * @param publicKey raw compressed bytes public key\n   */\n  function Key(publicKey) {\n    this.publicKey = publicKey;\n\n    if (publicKey) {\n      this.rawAddress = addressFromPublicKey(publicKey);\n      this.rawPubKey = pubKeyFromPublicKey(publicKey);\n    }\n  }\n\n  Object.defineProperty(Key.prototype, \"accAddress\", {\n    /**\n     * Terra account address. `terra-` prefixed.\n     */\n    get: function get() {\n      if (!this.rawAddress) {\n        throw new Error('Could not compute accAddress: missing rawAddress');\n      }\n\n      return bech32.encode('terra', Array.from(this.rawAddress));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Key.prototype, \"valAddress\", {\n    /**\n     * Terra validator address. `terravaloper-` prefixed.\n     */\n    get: function get() {\n      if (!this.rawAddress) {\n        throw new Error('Could not compute valAddress: missing rawAddress');\n      }\n\n      return bech32.encode('terravaloper', Array.from(this.rawAddress));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Key.prototype, \"accPubKey\", {\n    /**\n     * Terra account public key. `terrapub-` prefixed.\n     */\n    get: function get() {\n      if (!this.rawPubKey) {\n        throw new Error('Could not compute accPubKey: missing rawPubKey');\n      }\n\n      return bech32.encode('terrapub', Array.from(this.rawPubKey));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Key.prototype, \"valPubKey\", {\n    /**\n     * Terra validator public key. `terravaloperpub-` prefixed.\n     */\n    get: function get() {\n      if (!this.rawPubKey) {\n        throw new Error('Could not compute valPubKey: missing rawPubKey');\n      }\n\n      return bech32.encode('terravaloperpub', Array.from(this.rawPubKey));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Signs a [[StdSignMsg]] with the method supplied by the child class.\n   *\n   * @param tx sign-message of the transaction to sign\n   */\n\n  Key.prototype.createSignature = function (tx) {\n    return __awaiter(this, void 0, void 0, function () {\n      var sigBuffer;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.sign(Buffer.from(tx.toJSON()))];\n\n          case 1:\n            sigBuffer = _a.sent();\n\n            if (!this.publicKey) {\n              throw new Error('Signature could not be created: Key instance missing publicKey');\n            }\n\n            return [2\n            /*return*/\n            , core_1.StdSignature.fromData({\n              signature: sigBuffer.toString('base64'),\n              pub_key: {\n                type: 'tendermint/PubKeySecp256k1',\n                value: this.publicKey.toString('base64')\n              }\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Signs a [[StdSignMsg]] and adds the signature to a generated StdTx that is ready to be broadcasted.\n   * @param tx\n   */\n\n\n  Key.prototype.signTx = function (tx) {\n    return __awaiter(this, void 0, void 0, function () {\n      var sig;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.createSignature(tx)];\n\n          case 1:\n            sig = _a.sent();\n            return [2\n            /*return*/\n            , new core_2.StdTx(tx.msgs, tx.fee, [sig], tx.memo)];\n        }\n      });\n    });\n  };\n\n  return Key;\n}();\n\nexports.Key = Key;","map":{"version":3,"sources":["../../src/key/Key.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Key = void 0;\nvar bech32 = __importStar(require(\"bech32\"));\nvar HEX = __importStar(require(\"crypto-js/enc-hex\"));\nvar ripemd160_1 = __importDefault(require(\"crypto-js/ripemd160\"));\nvar sha256_1 = __importDefault(require(\"crypto-js/sha256\"));\nvar core_1 = require(\"../core\");\nvar core_2 = require(\"../core\");\nvar BECH32_PUBKEY_DATA_PREFIX = 'eb5ae98721';\n/**\n * Gets a raw address from a compressed bytes public key.\n *\n * @param publicKey raw public key\n */\nfunction addressFromPublicKey(publicKey) {\n    if (typeof publicKey !== 'object' || !(publicKey instanceof Buffer)) {\n        throw new TypeError('parameter must be Buffer that contains public key');\n    }\n    var message = HEX.parse(publicKey.toString('hex'));\n    var hash = ripemd160_1.default(sha256_1.default(message)).toString();\n    var address = Buffer.from(hash, 'hex');\n    return Buffer.from(bech32.toWords(address));\n}\n/**\n * Gets a bech32-words pubkey from a compressed bytes public key.\n *\n * @param publicKey raw public key\n */\nfunction pubKeyFromPublicKey(publicKey) {\n    var buffer = Buffer.from(BECH32_PUBKEY_DATA_PREFIX, 'hex');\n    var combined = Buffer.concat([buffer, publicKey]);\n    return Buffer.from(bech32.toWords(combined));\n}\n/**\n * Abstract key interface that provides transaction signing features and Bech32 address\n * and public key derivation from a public key. This allows you to create custom key\n * solutions, such as for various hardware wallets, by implementing signing and calling\n * `super` with the raw public key from within your subclass. See [[MnemonicKey]] for\n * an implementation of a basic mnemonic-based key.\n */\nvar Key = /** @class */ (function () {\n    /**\n     * Called to derive the relevant account and validator addresses and public keys from\n     * the raw compressed public key in bytes.\n     *\n     * @param publicKey raw compressed bytes public key\n     */\n    function Key(publicKey) {\n        this.publicKey = publicKey;\n        if (publicKey) {\n            this.rawAddress = addressFromPublicKey(publicKey);\n            this.rawPubKey = pubKeyFromPublicKey(publicKey);\n        }\n    }\n    Object.defineProperty(Key.prototype, \"accAddress\", {\n        /**\n         * Terra account address. `terra-` prefixed.\n         */\n        get: function () {\n            if (!this.rawAddress) {\n                throw new Error('Could not compute accAddress: missing rawAddress');\n            }\n            return bech32.encode('terra', Array.from(this.rawAddress));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Key.prototype, \"valAddress\", {\n        /**\n         * Terra validator address. `terravaloper-` prefixed.\n         */\n        get: function () {\n            if (!this.rawAddress) {\n                throw new Error('Could not compute valAddress: missing rawAddress');\n            }\n            return bech32.encode('terravaloper', Array.from(this.rawAddress));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Key.prototype, \"accPubKey\", {\n        /**\n         * Terra account public key. `terrapub-` prefixed.\n         */\n        get: function () {\n            if (!this.rawPubKey) {\n                throw new Error('Could not compute accPubKey: missing rawPubKey');\n            }\n            return bech32.encode('terrapub', Array.from(this.rawPubKey));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Key.prototype, \"valPubKey\", {\n        /**\n         * Terra validator public key. `terravaloperpub-` prefixed.\n         */\n        get: function () {\n            if (!this.rawPubKey) {\n                throw new Error('Could not compute valPubKey: missing rawPubKey');\n            }\n            return bech32.encode('terravaloperpub', Array.from(this.rawPubKey));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Signs a [[StdSignMsg]] with the method supplied by the child class.\n     *\n     * @param tx sign-message of the transaction to sign\n     */\n    Key.prototype.createSignature = function (tx) {\n        return __awaiter(this, void 0, void 0, function () {\n            var sigBuffer;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.sign(Buffer.from(tx.toJSON()))];\n                    case 1:\n                        sigBuffer = _a.sent();\n                        if (!this.publicKey) {\n                            throw new Error('Signature could not be created: Key instance missing publicKey');\n                        }\n                        return [2 /*return*/, core_1.StdSignature.fromData({\n                                signature: sigBuffer.toString('base64'),\n                                pub_key: {\n                                    type: 'tendermint/PubKeySecp256k1',\n                                    value: this.publicKey.toString('base64'),\n                                },\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * Signs a [[StdSignMsg]] and adds the signature to a generated StdTx that is ready to be broadcasted.\n     * @param tx\n     */\n    Key.prototype.signTx = function (tx) {\n        return __awaiter(this, void 0, void 0, function () {\n            var sig;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createSignature(tx)];\n                    case 1:\n                        sig = _a.sent();\n                        return [2 /*return*/, new core_2.StdTx(tx.msgs, tx.fee, [sig], tx.memo)];\n                }\n            });\n        });\n    };\n    return Key;\n}());\nexports.Key = Key;\n//# sourceMappingURL=Key.js.map"]},"metadata":{},"sourceType":"script"}