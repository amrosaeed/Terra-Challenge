{"ast":null,"code":"import _regeneratorRuntime from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useSetRecoilState}from\"recoil\";import{ethers}from\"ethers\";import{WalletLinkConnector}from\"@web3-react/walletlink-connector\";import{addressState,infuraId,providerState}from\"../database/atoms\";var useWalletConnect=function useWalletConnect(){var setProvider=useSetRecoilState(providerState);var setAddress=useSetRecoilState(addressState);var onClick=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var connector,_yield$connector$acti,account,provider;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:connector=new WalletLinkConnector({url:\"https://mainnet.infura.io/v3/\".concat(infuraId),appName:\"mETH\"});_context.next=3;return connector.activate();case 3:_yield$connector$acti=_context.sent;account=_yield$connector$acti.account;provider=_yield$connector$acti.provider;account&&setAddress(account);setProvider(new ethers.providers.Web3Provider(provider));case 8:case\"end\":return _context.stop();}}},_callee);}));return function onClick(){return _ref.apply(this,arguments);};}();return{onClick:onClick};};export default useWalletConnect;","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/layouts/useCoinbase.ts"],"names":["useSetRecoilState","ethers","WalletLinkConnector","addressState","infuraId","providerState","useWalletConnect","setProvider","setAddress","onClick","connector","url","appName","activate","account","provider","providers","Web3Provider"],"mappings":"qTAAA,OAASA,iBAAT,KAAkC,QAAlC,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,OAASC,mBAAT,KAAoC,kCAApC,CACA,OAASC,YAAT,CAAuBC,QAAvB,CAAiCC,aAAjC,KAAsD,mBAAtD,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAMC,CAAAA,WAAW,CAAGP,iBAAiB,CAACK,aAAD,CAArC,CACA,GAAMG,CAAAA,UAAU,CAAGR,iBAAiB,CAACG,YAAD,CAApC,CAEA,GAAMM,CAAAA,OAAO,0FAAG,wLACRC,SADQ,CACI,GAAIR,CAAAA,mBAAJ,CAAwB,CACxCS,GAAG,wCAAkCP,QAAlC,CADqC,CAExCQ,OAAO,CAAE,MAF+B,CAAxB,CADJ,uBAMsBF,CAAAA,SAAS,CAACG,QAAV,EANtB,4CAMNC,OANM,uBAMNA,OANM,CAMGC,QANH,uBAMGA,QANH,CAQdD,OAAO,EAAIN,UAAU,CAACM,OAAD,CAArB,CACAP,WAAW,CAAC,GAAIN,CAAAA,MAAM,CAACe,SAAP,CAAiBC,YAArB,CAAkCF,QAAlC,CAAD,CAAX,CATc,sDAAH,kBAAPN,CAAAA,OAAO,0CAAb,CAYA,MAAO,CAAEA,OAAO,CAAPA,OAAF,CAAP,CACD,CAjBD,CAmBA,cAAeH,CAAAA,gBAAf","sourcesContent":["import { useSetRecoilState } from \"recoil\"\nimport { ethers } from \"ethers\"\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\"\nimport { addressState, infuraId, providerState } from \"../database/atoms\"\n\nconst useWalletConnect = () => {\n  const setProvider = useSetRecoilState(providerState)\n  const setAddress = useSetRecoilState(addressState)\n\n  const onClick = async () => {\n    const connector = new WalletLinkConnector({\n      url: `https://mainnet.infura.io/v3/${infuraId}`,\n      appName: \"mETH\",\n    })\n\n    const { account, provider } = await connector.activate()\n\n    account && setAddress(account)\n    setProvider(new ethers.providers.Web3Provider(provider))\n  }\n\n  return { onClick }\n}\n\nexport default useWalletConnect\n"]},"metadata":{},"sourceType":"module"}