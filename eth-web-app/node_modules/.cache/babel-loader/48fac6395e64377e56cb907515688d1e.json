{"ast":null,"code":"import _objectSpread from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{useState}from\"react\";import classNames from\"classnames\";import Tooltip from\"../../components/Tooltip\";import{DECIMALS}from\"../../constants\";import MetaMask from\"../../images/wallets/Metamask.png\";import AMZN from\"../../images/icons/AMZN.png\";import AAPL from\"../../images/icons/AAPL.png\";import BABA from\"../../images/icons/BABA.png\";import GOOGL from\"../../images/icons/GOOGL.png\";import IAU from\"../../images/icons/IAU.png\";import MIR from\"../../images/icons/MIR.png\";import MSFT from\"../../images/icons/MSFT.png\";import NFLX from\"../../images/icons/NFLX.png\";import QQQ from\"../../images/icons/QQQ.png\";import SLV from\"../../images/icons/SLV.png\";import TSLA from\"../../images/icons/TSLA.png\";import TWTR from\"../../images/icons/TWTR.png\";import USO from\"../../images/icons/USO.png\";import UST from\"../../images/icons/UST.png\";import VIXY from\"../../images/icons/VIXY.png\";import styles from\"./AddToMetamask.module.scss\";var icons={UST:UST,MIR:MIR,mAAPL:AAPL,mAMZN:AMZN,mBABA:BABA,mGOOGL:GOOGL,mIAU:IAU,mMSFT:MSFT,mNFLX:NFLX,mQQQ:QQQ,mSLV:SLV,mTSLA:TSLA,mTWTR:TWTR,mUSO:USO,mVIXY:VIXY};var AddToMetamask=function AddToMetamask(_ref){var token=_ref.token,symbol=_ref.symbol,children=_ref.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),setAdded=_useState2[1];var addToMetamask=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var wasAdded;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return window.ethereum.request({method:\"wallet_watchAsset\",params:{type:\"ERC20\",options:{address:token,symbol:symbol,decimals:DECIMALS,image:icons[symbol]}}});case 3:wasAdded=_context.sent;setAdded(wasAdded);_context.next=9;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function addToMetamask(){return _ref2.apply(this,arguments);};}();var size={width:20,height:20};var tooltip=\"Add \".concat(symbol,\" to MetaMask\");var icon=/*#__PURE__*/_jsx(\"img\",_objectSpread(_objectSpread({},size),{},{src:MetaMask,alt:tooltip}));return children?/*#__PURE__*/_jsxs(\"button\",{className:styles.button,onClick:addToMetamask,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.text,children:children}),icon]}):/*#__PURE__*/_jsx(Tooltip,{className:classNames(styles.button,styles.standalone),onClick:addToMetamask,content:tooltip,children:icon});};export default AddToMetamask;","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/pages/home/AddToMetamask.tsx"],"names":["useState","classNames","Tooltip","DECIMALS","MetaMask","AMZN","AAPL","BABA","GOOGL","IAU","MIR","MSFT","NFLX","QQQ","SLV","TSLA","TWTR","USO","UST","VIXY","styles","icons","mAAPL","mAMZN","mBABA","mGOOGL","mIAU","mMSFT","mNFLX","mQQQ","mSLV","mTSLA","mTWTR","mUSO","mVIXY","AddToMetamask","token","symbol","children","setAdded","addToMetamask","window","ethereum","request","method","params","type","options","address","decimals","image","wasAdded","size","width","height","tooltip","icon","button","text","standalone"],"mappings":"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","sourcesContent":["import { FC, useState } from \"react\"\nimport { Dictionary } from \"ramda\"\nimport classNames from \"classnames\"\nimport Tooltip from \"../../components/Tooltip\"\nimport { DECIMALS } from \"../../constants\"\n\nimport MetaMask from \"../../images/wallets/Metamask.png\"\nimport AMZN from \"../../images/icons/AMZN.png\"\nimport AAPL from \"../../images/icons/AAPL.png\"\nimport BABA from \"../../images/icons/BABA.png\"\nimport GOOGL from \"../../images/icons/GOOGL.png\"\nimport IAU from \"../../images/icons/IAU.png\"\nimport MIR from \"../../images/icons/MIR.png\"\nimport MSFT from \"../../images/icons/MSFT.png\"\nimport NFLX from \"../../images/icons/NFLX.png\"\nimport QQQ from \"../../images/icons/QQQ.png\"\nimport SLV from \"../../images/icons/SLV.png\"\nimport TSLA from \"../../images/icons/TSLA.png\"\nimport TWTR from \"../../images/icons/TWTR.png\"\nimport USO from \"../../images/icons/USO.png\"\nimport UST from \"../../images/icons/UST.png\"\nimport VIXY from \"../../images/icons/VIXY.png\"\n\nimport styles from \"./AddToMetamask.module.scss\"\n\nconst icons: Dictionary<string> = {\n  UST,\n  MIR,\n  mAAPL: AAPL,\n  mAMZN: AMZN,\n  mBABA: BABA,\n  mGOOGL: GOOGL,\n  mIAU: IAU,\n  mMSFT: MSFT,\n  mNFLX: NFLX,\n  mQQQ: QQQ,\n  mSLV: SLV,\n  mTSLA: TSLA,\n  mTWTR: TWTR,\n  mUSO: USO,\n  mVIXY: VIXY,\n}\n\nconst AddToMetamask: FC<ListedItem> = ({ token, symbol, children }) => {\n  const [, setAdded] = useState(false)\n\n  const addToMetamask = async () => {\n    try {\n      const wasAdded = await window.ethereum.request({\n        method: \"wallet_watchAsset\",\n        params: {\n          type: \"ERC20\",\n          options: {\n            address: token,\n            symbol,\n            decimals: DECIMALS,\n            image: icons[symbol],\n          },\n        },\n      })\n\n      setAdded(wasAdded)\n    } catch (error) {\n      // Do nothing\n    }\n  }\n\n  const size = { width: 20, height: 20 }\n  const tooltip = `Add ${symbol} to MetaMask`\n  const icon = <img {...size} src={MetaMask} alt={tooltip} />\n\n  return children ? (\n    <button className={styles.button} onClick={addToMetamask}>\n      <span className={styles.text}>{children}</span>\n      {icon}\n    </button>\n  ) : (\n    <Tooltip\n      className={classNames(styles.button, styles.standalone)}\n      onClick={addToMetamask}\n      content={tooltip}\n    >\n      {icon}\n    </Tooltip>\n  )\n}\n\nexport default AddToMetamask\n"]},"metadata":{},"sourceType":"module"}