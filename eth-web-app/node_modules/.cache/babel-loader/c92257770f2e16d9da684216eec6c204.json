{"ast":null,"code":"import _regeneratorRuntime from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{selectorFamily,useRecoilValue}from\"recoil\";import{integer}from\"./dbUtils\";import{addressState}from\"./atoms\";import{abiQuery}from\"./abi\";export var balanceQuery=selectorFamily({key:\"balance\",get:function get(token){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var get,address,balance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:get=_ref.get;address=get(addressState);balance=get(abiQuery({token:token,name:\"balanceOf\",param:address}));return _context.abrupt(\"return\",integer(balance));case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}();}});export var useBalance=function useBalance(token){var value=useRecoilValue(balanceQuery(token));return value;};","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/database/balance.ts"],"names":["selectorFamily","useRecoilValue","integer","addressState","abiQuery","balanceQuery","key","get","token","address","balance","name","param","useBalance","value"],"mappings":"qTAAA,OAASA,cAAT,CAAyBC,cAAzB,KAA+C,QAA/C,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,OAASC,YAAT,KAA6B,SAA7B,CACA,OAASC,QAAT,KAAyB,OAAzB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAGL,cAAc,CAAC,CACzCM,GAAG,CAAE,SADoC,CAEzCC,GAAG,CAAE,aAACC,KAAD,kGAAmB,+JAASD,GAAT,MAASA,GAAT,CAChBE,OADgB,CACNF,GAAG,CAACJ,YAAD,CADG,CAEhBO,OAFgB,CAENH,GAAG,CAACH,QAAQ,CAAC,CAAEI,KAAK,CAALA,KAAF,CAASG,IAAI,CAAE,WAAf,CAA4BC,KAAK,CAAEH,OAAnC,CAAD,CAAT,CAFG,iCAGfP,OAAO,CAACQ,OAAD,CAHQ,wDAAnB,iEAFoC,CAAD,CAAnC,CASP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACL,KAAD,CAAmB,CAC3C,GAAMM,CAAAA,KAAK,CAAGb,cAAc,CAACI,YAAY,CAACG,KAAD,CAAb,CAA5B,CACA,MAAOM,CAAAA,KAAP,CACD,CAHM","sourcesContent":["import { selectorFamily, useRecoilValue } from \"recoil\"\nimport { integer } from \"./dbUtils\"\nimport { addressState } from \"./atoms\"\nimport { abiQuery } from \"./abi\"\n\nexport const balanceQuery = selectorFamily({\n  key: \"balance\",\n  get: (token: string) => async ({ get }) => {\n    const address = get(addressState)\n    const balance = get(abiQuery({ token, name: \"balanceOf\", param: address }))\n    return integer(balance)\n  },\n})\n\nexport const useBalance = (token: string) => {\n  const value = useRecoilValue(balanceQuery(token))\n  return value\n}\n"]},"metadata":{},"sourceType":"module"}