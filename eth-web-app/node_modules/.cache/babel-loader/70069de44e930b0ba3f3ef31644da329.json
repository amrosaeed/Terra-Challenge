{"ast":null,"code":"import _toConsumableArray from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectWithoutProperties from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import classNames from\"classnames/bind\";import{insertIf}from\"../libs/utils\";import getLpName from\"../libs/getLpName\";import Card from\"./Card\";import Icon from\"./Icon\";import TokenPair from\"./TokenPair\";import{DlFooter}from\"./Dl\";import styles from\"./StakeItemCard.module.scss\";var cx=classNames.bind(styles);var StakeItemCard=function StakeItemCard(_ref){var token=_ref.token,symbol=_ref.symbol,name=_ref.name,to=_ref.to,item=_objectWithoutProperties(_ref,[\"token\",\"symbol\",\"name\",\"to\"]);var staked=item.staked,stakable=item.stakable;var price=item.price,apr=item.apr,totalStaked=item.totalStaked,action=item.action,emphasize=item.emphasize,children=item.children;var badges=[].concat(_toConsumableArray(insertIf(staked,{label:\"Staked\",color:\"blue\"})),_toConsumableArray(insertIf(stakable,{label:\"Stakable\",color:\"slate\"})));var stats=[{title:\"APR\",content:apr},{title:\"Total Staked\",content:totalStaked},{title:\"Price\",content:price}].filter(function(_ref2){var content=_ref2.content;return content;});return/*#__PURE__*/_jsxs(Card,{to:to,badges:badges,className:cx({emphasize:emphasize}),children:[action&&/*#__PURE__*/_jsx(\"aside\",{className:styles.action,children:action}),/*#__PURE__*/_jsxs(\"article\",{className:styles.component,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.main,children:[/*#__PURE__*/_jsx(TokenPair,{symbol:symbol}),/*#__PURE__*/_jsxs(\"header\",{className:cx(styles.header,{to:to}),children:[/*#__PURE__*/_jsx(\"h1\",{className:styles.heading,children:name!==null&&name!==void 0?name:getLpName(symbol)}),to&&/*#__PURE__*/_jsx(Icon,{name:\"chevron_right\",size:20})]}),price?/*#__PURE__*/_jsx(\"section\",{className:styles.vertical,children:stats.map(function(_ref3){var title=_ref3.title,content=_ref3.content;return/*#__PURE__*/_jsxs(\"article\",{className:styles.item,children:[/*#__PURE__*/_jsx(\"h1\",{className:styles.title,children:title}),/*#__PURE__*/_jsx(\"div\",{className:styles.content,children:content})]},title);})}):/*#__PURE__*/_jsx(DlFooter,{list:stats,className:styles.stats,ddClassName:styles.dd})]}),children]})]},token);};export default StakeItemCard;","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/components/StakeItemCard.tsx"],"names":["classNames","insertIf","getLpName","Card","Icon","TokenPair","DlFooter","styles","cx","bind","StakeItemCard","token","symbol","name","to","item","staked","stakable","price","apr","totalStaked","action","emphasize","children","badges","label","color","stats","title","content","filter","component","main","header","heading","vertical","map","dd"],"mappings":"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","sourcesContent":["import { FC, ReactNode } from \"react\"\nimport classNames from \"classnames/bind\"\nimport { insertIf } from \"../libs/utils\"\nimport getLpName from \"../libs/getLpName\"\nimport Card from \"./Card\"\nimport Icon from \"./Icon\"\nimport TokenPair from \"./TokenPair\"\nimport { DlFooter } from \"./Dl\"\nimport styles from \"./StakeItemCard.module.scss\"\n\nconst cx = classNames.bind(styles)\n\nexport interface Props {\n  token: string\n  symbol: string\n  name?: string\n\n  staked: boolean\n  stakable: boolean\n\n  apr: ReactNode\n  totalStaked: ReactNode\n  price?: ReactNode\n\n  to?: string\n  action?: ReactNode\n  emphasize?: boolean\n}\n\nconst StakeItemCard: FC<Props> = ({ token, symbol, name, to, ...item }) => {\n  const { staked, stakable } = item\n  const { price, apr, totalStaked, action, emphasize, children } = item\n\n  const badges = [\n    ...insertIf(staked, { label: \"Staked\", color: \"blue\" }),\n    ...insertIf(stakable, { label: \"Stakable\", color: \"slate\" }),\n  ]\n\n  const stats = [\n    { title: \"APR\", content: apr },\n    { title: \"Total Staked\", content: totalStaked },\n    { title: \"Price\", content: price },\n  ].filter(({ content }) => content)\n\n  return (\n    <Card to={to} badges={badges} className={cx({ emphasize })} key={token}>\n      {action && <aside className={styles.action}>{action}</aside>}\n\n      <article className={styles.component}>\n        <div className={styles.main}>\n          <TokenPair symbol={symbol} />\n\n          <header className={cx(styles.header, { to })}>\n            <h1 className={styles.heading}>{name ?? getLpName(symbol)}</h1>\n            {to && <Icon name=\"chevron_right\" size={20} />}\n          </header>\n\n          {price ? (\n            <section className={styles.vertical}>\n              {stats.map(({ title, content }) => (\n                <article className={styles.item} key={title}>\n                  <h1 className={styles.title}>{title}</h1>\n                  <div className={styles.content}>{content}</div>\n                </article>\n              ))}\n            </section>\n          ) : (\n            <DlFooter\n              list={stats}\n              className={styles.stats}\n              ddClassName={styles.dd}\n            />\n          )}\n        </div>\n\n        {children}\n      </article>\n    </Card>\n  )\n}\n\nexport default StakeItemCard\n"]},"metadata":{},"sourceType":"module"}