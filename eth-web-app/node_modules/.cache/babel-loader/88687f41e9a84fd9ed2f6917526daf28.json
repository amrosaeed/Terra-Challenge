{"ast":null,"code":"import _objectSpread from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{jsx as _jsx}from\"react/jsx-runtime\";import{useState}from\"react\";import{useRecoilValue}from\"recoil\";import{ethers}from\"ethers\";import useForm from\"../libs/useForm\";import{lookup}from\"../libs/parse\";import{placeholder,step,validate as v}from\"../libs/formHelpers\";import{renderBalance}from\"../libs/formHelpers\";import FormGroup from\"../components/FormGroup\";import{providerState}from\"../database/atoms\";import{useBalance}from\"../database/balance\";import{useContract}from\"../database/contract\";import FormContainer from\"../forms/FormContainer\";var Key;(function(Key){Key[\"value\"]=\"value\";})(Key||(Key={}));var Stake=function Stake(_ref){var type=_ref.type,tab=_ref.tab,symbol=_ref.symbol,lp=_ref.lp,pool=_ref.pool;/* context */var balance=useBalance({stake:lp,unstake:pool}[type]);/* form:validate */var validate=function validate(_ref2){var value=_ref2.value;return _defineProperty({},Key.value,v.amount(value,{symbol:symbol,max:balance}));};/* form:hook */var initial=_defineProperty({},Key.value,\"\");var form=useForm(initial,validate);var values=form.values,setValue=form.setValue,getFields=form.getFields,attrs=form.attrs,invalid=form.invalid;var value=values.value;var amount=ethers.utils.parseEther(value||\"0\");/* render:form */var fields=getFields(_defineProperty({},Key.value,{label:\"Amount\",input:{type:\"number\",step:step(symbol),placeholder:placeholder(symbol)},unit:\"LP\",max:function max(){return setValue(Key.value,lookup(balance,symbol));},help:renderBalance(balance,symbol)}));/* submit */var disabled=invalid;var _useState=useState(type),_useState2=_slicedToArray(_useState,2),label=_useState2[0],setLabel=_useState2[1];var lpContract=useContract(lp);var poolContract=useContract(pool);var provider=useRecoilValue(providerState);var stake=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(signer){var lpWithSigner,approve,poolWithSigner,_yield$poolWithSigner,hash;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:lpWithSigner=lpContract.connect(signer);_context.next=3;return lpWithSigner.approve(pool,amount);case 3:approve=_context.sent;setLabel(\"Approving...\");_context.next=7;return provider.waitForTransaction(approve.hash);case 7:setLabel(\"Approved!\");poolWithSigner=poolContract.connect(signer);_context.next=11;return poolWithSigner.stake(amount);case 11:_yield$poolWithSigner=_context.sent;hash=_yield$poolWithSigner.hash;return _context.abrupt(\"return\",hash);case 14:case\"end\":return _context.stop();}}},_callee);}));return function stake(_x){return _ref4.apply(this,arguments);};}();var unstake=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(signer){var poolWithSigner,_yield$poolWithSigner2,hash;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:poolWithSigner=poolContract.connect(signer);_context2.next=3;return poolWithSigner.withdraw(amount);case 3:_yield$poolWithSigner2=_context2.sent;hash=_yield$poolWithSigner2.hash;return _context2.abrupt(\"return\",hash);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function unstake(_x2){return _ref5.apply(this,arguments);};}();var tx={stake:stake,unstake:unstake}[type];var container={attrs:attrs,tab:tab,disabled:disabled,label:label,tx:tx};return/*#__PURE__*/_jsx(FormContainer,_objectSpread(_objectSpread({},container),{},{children:/*#__PURE__*/_jsx(FormGroup,_objectSpread({},fields[Key.value]))}));};export default Stake;","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/forms/StakeForm.tsx"],"names":["useState","useRecoilValue","ethers","useForm","lookup","placeholder","step","validate","v","renderBalance","FormGroup","providerState","useBalance","useContract","FormContainer","Key","Stake","type","tab","symbol","lp","pool","balance","stake","unstake","value","amount","max","initial","form","values","setValue","getFields","attrs","invalid","utils","parseEther","fields","label","input","unit","help","disabled","setLabel","lpContract","poolContract","provider","signer","lpWithSigner","connect","approve","waitForTransaction","hash","poolWithSigner","withdraw","tx","container"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\nimport { useRecoilValue } from \"recoil\"\nimport { ethers } from \"ethers\"\n\nimport useForm from \"../libs/useForm\"\nimport { lookup } from \"../libs/parse\"\nimport { placeholder, step, validate as v } from \"../libs/formHelpers\"\nimport { renderBalance } from \"../libs/formHelpers\"\nimport FormGroup from \"../components/FormGroup\"\n\nimport { providerState } from \"../database/atoms\"\nimport { useBalance } from \"../database/balance\"\nimport { useContract } from \"../database/contract\"\nimport FormContainer from \"../forms/FormContainer\"\n\nenum Key {\n  value = \"value\",\n}\n\ninterface Props extends ListedAsset {\n  type: \"stake\" | \"unstake\"\n  tab: Tab\n}\n\nconst Stake = ({ type, tab, symbol, lp, pool }: Props) => {\n  /* context */\n  const balance = useBalance({ stake: lp, unstake: pool }[type]!)\n\n  /* form:validate */\n  const validate = ({ value }: Values<Key>) => ({\n    [Key.value]: v.amount(value, { symbol, max: balance }),\n  })\n\n  /* form:hook */\n  const initial = { [Key.value]: \"\" }\n  const form = useForm(initial, validate)\n  const { values, setValue, getFields, attrs, invalid } = form\n  const { value } = values\n  const amount = ethers.utils.parseEther(value || \"0\")\n\n  /* render:form */\n  const fields = getFields({\n    [Key.value]: {\n      label: \"Amount\",\n      input: {\n        type: \"number\",\n        step: step(symbol),\n        placeholder: placeholder(symbol),\n      },\n      unit: \"LP\",\n      max: () => setValue(Key.value, lookup(balance, symbol)),\n      help: renderBalance(balance, symbol),\n    },\n  })\n\n  /* submit */\n  const disabled = invalid\n\n  const [label, setLabel] = useState<string>(type)\n  const lpContract = useContract(lp)\n  const poolContract = useContract(pool)\n\n  const provider = useRecoilValue(providerState)\n\n  const stake = async (signer: ethers.providers.JsonRpcSigner) => {\n    const lpWithSigner = lpContract!.connect(signer)\n    const approve = await lpWithSigner.approve(pool, amount)\n    setLabel(\"Approving...\")\n\n    await provider.waitForTransaction(approve.hash)\n    setLabel(\"Approved!\")\n\n    const poolWithSigner = poolContract!.connect(signer)\n    const { hash } = await poolWithSigner.stake(amount)\n    return hash\n  }\n\n  const unstake = async (signer: ethers.providers.JsonRpcSigner) => {\n    const poolWithSigner = poolContract!.connect(signer)\n    const { hash } = await poolWithSigner.withdraw(amount)\n    return hash\n  }\n\n  const tx = { stake, unstake }[type]\n  const container = { attrs, tab, disabled, label, tx }\n\n  return (\n    <FormContainer {...container}>\n      <FormGroup {...fields[Key.value]} />\n    </FormContainer>\n  )\n}\n\nexport default Stake\n"]},"metadata":{},"sourceType":"module"}