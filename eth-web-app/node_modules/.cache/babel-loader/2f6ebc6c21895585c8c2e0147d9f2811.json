{"ast":null,"code":"import _slicedToArray from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{useAddress}from\"../../database/address\";import{useSelectWalletModal}from\"../../database/selectWalletModal\";var useOpenToConnect=function useOpenToConnect(href){var _useSelectWalletModal=useSelectWalletModal(),open=_useSelectWalletModal.open;var address=useAddress();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),clicked=_useState2[0],setClicked=_useState2[1];useEffect(function(){clicked&&href&&window.open(href);setClicked(false);},[clicked,href]);var handleClick=function handleClick(){open();setClicked(true);};return!address?handleClick:undefined;};export default useOpenToConnect;","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/pages/home/useOpenToConnect.ts"],"names":["useEffect","useState","useAddress","useSelectWalletModal","useOpenToConnect","href","open","address","clicked","setClicked","window","handleClick","undefined"],"mappings":"4JAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,UAAT,KAA2B,wBAA3B,CACA,OAASC,oBAAT,KAAqC,kCAArC,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,CAAmB,2BACzBF,oBAAoB,EADK,CAClCG,IADkC,uBAClCA,IADkC,CAE1C,GAAMC,CAAAA,OAAO,CAAGL,UAAU,EAA1B,CAF0C,cAGZD,QAAQ,CAAC,KAAD,CAHI,wCAGnCO,OAHmC,eAG1BC,UAH0B,eAK1CT,SAAS,CAAC,UAAM,CACdQ,OAAO,EAAIH,IAAX,EAAmBK,MAAM,CAACJ,IAAP,CAAYD,IAAZ,CAAnB,CACAI,UAAU,CAAC,KAAD,CAAV,CACD,CAHQ,CAGN,CAACD,OAAD,CAAUH,IAAV,CAHM,CAAT,CAKA,GAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBL,IAAI,GACJG,UAAU,CAAC,IAAD,CAAV,CACD,CAHD,CAKA,MAAO,CAACF,OAAD,CAAWI,WAAX,CAAyBC,SAAhC,CACD,CAhBD,CAkBA,cAAeR,CAAAA,gBAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useAddress } from \"../../database/address\"\nimport { useSelectWalletModal } from \"../../database/selectWalletModal\"\n\nconst useOpenToConnect = (href?: string) => {\n  const { open } = useSelectWalletModal()\n  const address = useAddress()\n  const [clicked, setClicked] = useState(false)\n\n  useEffect(() => {\n    clicked && href && window.open(href)\n    setClicked(false)\n  }, [clicked, href])\n\n  const handleClick = () => {\n    open()\n    setClicked(true)\n  }\n\n  return !address ? handleClick : undefined\n}\n\nexport default useOpenToConnect\n"]},"metadata":{},"sourceType":"module"}