{"ast":null,"code":"import _defineProperty from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{record}from\"./utils\";var useForm=function useForm(initial,validate){var touch=record(initial,false);var _useState=useState(initial),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState(touch),_useState4=_slicedToArray(_useState3,2),touched=_useState4[0],setTouched=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),focused=_useState6[0],setFocused=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),changed=_useState8[0],setChanged=_useState8[1];var setValue=function setValue(key,value){setTouched(_objectSpread(_objectSpread({},touched),{},_defineProperty({},key,true)));setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},key,value)));};var handleChange=function handleChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setChanged(name);setValue(name,value);};var reset=function reset(){setValues(initial);setTouched(touch);setFocused(undefined);};var onFocus=function onFocus(e){setFocused(e.target.name);};var onBlur=function onBlur(){setFocused(undefined);};var errors=validate(values);var invalid=Object.values(errors).some(function(v){return v;});var getFields=function getFields(fields){return Object.entries(_objectSpread(_objectSpread({},record(initial,{})),fields)).reduce(function(acc,_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],field=_ref2[1];var defaultAttributes={id:key,name:key,value:values[key],onChange:handleChange,autoComplete:\"off\"};return _objectSpread(_objectSpread({},acc),{},_defineProperty({},key,Object.assign(_objectSpread(_objectSpread({},field),{},{focused:focused===key||field.focused,error:touched[key]?errors[key]:\"\"}),field.input&&{input:_objectSpread(_objectSpread({},defaultAttributes),field.input)},field.textarea&&{textarea:_objectSpread(_objectSpread({},defaultAttributes),{},{rows:3},field.textarea)},field.select&&{select:_objectSpread(_objectSpread({},defaultAttributes),field.select)})));},{});};return{values:values,setValue:setValue,setValues:setValues,setChanged:setChanged,handleChange:handleChange,getFields:getFields,touched:touched,changed:changed,errors:errors,invalid:invalid,reset:reset,attrs:{onFocus:onFocus,onBlur:onBlur}};};export default useForm;","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/libs/useForm.ts"],"names":["useState","record","useForm","initial","validate","touch","values","setValues","touched","setTouched","focused","setFocused","changed","setChanged","setValue","key","value","handleChange","e","target","name","reset","undefined","onFocus","onBlur","errors","invalid","Object","some","v","getFields","fields","entries","reduce","acc","field","defaultAttributes","id","onChange","autoComplete","assign","error","input","textarea","rows","select","attrs"],"mappings":"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","sourcesContent":["import { useState, ChangeEvent, FocusEvent } from \"react\"\nimport { record } from \"./utils\"\n\nconst useForm = <Key extends string>(\n  initial: Values<Key>,\n  validate: (values: Values<Key>) => Values<Key>\n) => {\n  const touch = record(initial, false)\n  const [values, setValues] = useState<Values<Key>>(initial)\n  const [touched, setTouched] = useState<Touched<Key>>(touch)\n  const [focused, setFocused] = useState<Key>()\n  const [changed, setChanged] = useState<Key>()\n\n  const setValue = (key: Key, value: string) => {\n    setTouched({ ...touched, [key]: true })\n    setValues({ ...values, [key]: value })\n  }\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    setChanged(name as Key)\n    setValue(name as Key, value)\n  }\n\n  const reset = () => {\n    setValues(initial)\n    setTouched(touch)\n    setFocused(undefined)\n  }\n\n  const onFocus = (e: FocusEvent<HTMLFormElement>) => {\n    setFocused(e.target.name as Key)\n  }\n\n  const onBlur = () => {\n    setFocused(undefined)\n  }\n\n  const errors = validate(values)\n  const invalid = Object.values(errors).some((v) => v)\n\n  const getFields = (fields: Partial<Record<Key, FormGroup>>) =>\n    Object.entries<FormGroup>({ ...record(initial, {}), ...fields }).reduce(\n      (acc, [key, field]) => {\n        const defaultAttributes = {\n          id: key,\n          name: key,\n          value: values[key as Key],\n          onChange: handleChange,\n          autoComplete: \"off\",\n        }\n\n        return {\n          ...acc,\n          [key]: Object.assign(\n            {\n              ...field,\n              focused: focused === key || field.focused,\n              error: touched[key as Key] ? errors[key as Key] : \"\",\n            },\n            field.input && {\n              input: { ...defaultAttributes, ...field.input },\n            },\n            field.textarea && {\n              textarea: { ...defaultAttributes, rows: 3, ...field.textarea },\n            },\n            field.select && {\n              select: { ...defaultAttributes, ...field.select },\n            }\n          ),\n        }\n      },\n      {} as Record<Key, FormGroup>\n    )\n\n  return {\n    values,\n    setValue,\n    setValues,\n    setChanged,\n    handleChange,\n\n    getFields,\n    touched,\n    changed,\n    errors,\n\n    invalid,\n    reset,\n\n    attrs: { onFocus, onBlur },\n  }\n}\n\nexport default useForm\n"]},"metadata":{},"sourceType":"module"}