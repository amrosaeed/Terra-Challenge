{"ast":null,"code":"import _slicedToArray from\"/home/amro/MirrorProtocol/eth-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{useState,useEffect}from\"react\";import{Link,useLocation}from\"react-router-dom\";import classNames from\"classnames/bind\";import Container from\"./Container\";import Icon from\"./Icon\";import Menu from\"./Menu\";import Badge from\"./Badge\";import styles from\"./AppHeader.module.scss\";var cx=classNames.bind(styles);var AppHeader=function AppHeader(_ref){var logo=_ref.logo,menu=_ref.menu,connect=_ref.connect,border=_ref.border,testnet=_ref.testnet;var _useLocation=useLocation(),key=_useLocation.key;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var toggle=function toggle(){return setIsOpen(!isOpen);};var hideToggle=menu.every(function(item){return item.desktopOnly;});useEffect(function(){setIsOpen(false);},[key]);return/*#__PURE__*/_jsx(\"header\",{className:cx(styles.header,{collapsed:!isOpen}),children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsxs(\"section\",{className:styles.wrapper,children:[/*#__PURE__*/_jsx(\"h1\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",className:styles.logo,children:logo})}),testnet&&/*#__PURE__*/_jsx(Badge,{className:styles.badge,children:\"Testnet\"}),!hideToggle&&/*#__PURE__*/_jsx(\"button\",{className:styles.toggle,onClick:toggle,children:/*#__PURE__*/_jsx(Icon,{name:!isOpen?\"menu\":\"close\",size:24})})]}),/*#__PURE__*/_jsxs(\"section\",{className:styles.support,children:[/*#__PURE__*/_jsx(Menu,{list:menu},key),/*#__PURE__*/_jsx(\"div\",{className:styles.connect,children:connect})]})]}),border&&!isOpen&&/*#__PURE__*/_jsx(\"hr\",{className:styles.hr})]})});};export default AppHeader;","map":{"version":3,"sources":["/home/amro/MirrorProtocol/eth-web-app/src/components/AppHeader.tsx"],"names":["useState","useEffect","Link","useLocation","classNames","Container","Icon","Menu","Badge","styles","cx","bind","AppHeader","logo","menu","connect","border","testnet","key","isOpen","setIsOpen","toggle","hideToggle","every","item","desktopOnly","header","collapsed","container","wrapper","badge","support","hr"],"mappings":"oPAAA,OAASA,QAAT,CAAmBC,SAAnB,KAA+C,OAA/C,CACA,OAASC,IAAT,CAAeC,WAAf,KAAkC,kBAAlC,CACA,MAAOC,CAAAA,UAAP,KAAuB,iBAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CAEA,GAAMC,CAAAA,EAAE,CAAGN,UAAU,CAACO,IAAX,CAAgBF,MAAhB,CAAX,CAUA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAqD,IAAlDC,CAAAA,IAAkD,MAAlDA,IAAkD,CAA5CC,IAA4C,MAA5CA,IAA4C,CAAtCC,OAAsC,MAAtCA,OAAsC,CAA7BC,MAA6B,MAA7BA,MAA6B,CAArBC,OAAqB,MAArBA,OAAqB,kBACrDd,WAAW,EAD0C,CAC7De,GAD6D,cAC7DA,GAD6D,eAEzClB,QAAQ,CAAC,KAAD,CAFiC,wCAE9DmB,MAF8D,eAEtDC,SAFsD,eAGrE,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAMD,CAAAA,SAAS,CAAC,CAACD,MAAF,CAAf,EAAf,CACA,GAAMG,CAAAA,UAAU,CAAGR,IAAI,CAACS,KAAL,CAAW,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,WAAf,EAAX,CAAnB,CAEAxB,SAAS,CAAC,UAAM,CACdmB,SAAS,CAAC,KAAD,CAAT,CACD,CAFQ,CAEN,CAACF,GAAD,CAFM,CAAT,CAIA,mBACE,eAAQ,SAAS,CAAER,EAAE,CAACD,MAAM,CAACiB,MAAR,CAAgB,CAAEC,SAAS,CAAE,CAACR,MAAd,CAAhB,CAArB,uBACE,MAAC,SAAD,yBACE,aAAK,SAAS,CAAEV,MAAM,CAACmB,SAAvB,wBACE,iBAAS,SAAS,CAAEnB,MAAM,CAACoB,OAA3B,wBACE,iCACE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAEpB,MAAM,CAACI,IAA/B,UACGA,IADH,EADF,EADF,CAOGI,OAAO,eAAI,KAAC,KAAD,EAAO,SAAS,CAAER,MAAM,CAACqB,KAAzB,qBAPd,CASG,CAACR,UAAD,eACC,eAAQ,SAAS,CAAEb,MAAM,CAACY,MAA1B,CAAkC,OAAO,CAAEA,MAA3C,uBACE,KAAC,IAAD,EAAM,IAAI,CAAE,CAACF,MAAD,CAAU,MAAV,CAAmB,OAA/B,CAAwC,IAAI,CAAE,EAA9C,EADF,EAVJ,GADF,cAiBE,iBAAS,SAAS,CAAEV,MAAM,CAACsB,OAA3B,wBACE,KAAC,IAAD,EAAM,IAAI,CAAEjB,IAAZ,EAAuBI,GAAvB,CADF,cAEE,YAAK,SAAS,CAAET,MAAM,CAACM,OAAvB,UAAiCA,OAAjC,EAFF,GAjBF,GADF,CAwBGC,MAAM,EAAI,CAACG,MAAX,eAAqB,WAAI,SAAS,CAAEV,MAAM,CAACuB,EAAtB,EAxBxB,GADF,EADF,CA8BD,CAxCD,CA0CA,cAAepB,CAAAA,SAAf","sourcesContent":["import { useState, useEffect, ReactNode } from \"react\"\nimport { Link, useLocation } from \"react-router-dom\"\nimport classNames from \"classnames/bind\"\nimport Container from \"./Container\"\nimport Icon from \"./Icon\"\nimport Menu from \"./Menu\"\nimport Badge from \"./Badge\"\nimport styles from \"./AppHeader.module.scss\"\n\nconst cx = classNames.bind(styles)\n\ninterface Props {\n  logo: ReactNode\n  menu: MenuItem[]\n  connect: ReactNode\n  border?: boolean\n  testnet?: boolean\n}\n\nconst AppHeader = ({ logo, menu, connect, border, testnet }: Props) => {\n  const { key } = useLocation()\n  const [isOpen, setIsOpen] = useState(false)\n  const toggle = () => setIsOpen(!isOpen)\n  const hideToggle = menu.every((item) => item.desktopOnly)\n\n  useEffect(() => {\n    setIsOpen(false)\n  }, [key])\n\n  return (\n    <header className={cx(styles.header, { collapsed: !isOpen })}>\n      <Container>\n        <div className={styles.container}>\n          <section className={styles.wrapper}>\n            <h1>\n              <Link to=\"/\" className={styles.logo}>\n                {logo}\n              </Link>\n            </h1>\n\n            {testnet && <Badge className={styles.badge}>Testnet</Badge>}\n\n            {!hideToggle && (\n              <button className={styles.toggle} onClick={toggle}>\n                <Icon name={!isOpen ? \"menu\" : \"close\"} size={24} />\n              </button>\n            )}\n          </section>\n\n          <section className={styles.support}>\n            <Menu list={menu} key={key} />\n            <div className={styles.connect}>{connect}</div>\n          </section>\n        </div>\n\n        {border && !isOpen && <hr className={styles.hr} />}\n      </Container>\n    </header>\n  )\n}\n\nexport default AppHeader\n"]},"metadata":{},"sourceType":"module"}